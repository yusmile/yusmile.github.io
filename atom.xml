<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Dream Come True</title>
  <subtitle>现实梦想</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://cometrue.top/"/>
  <updated>2017-02-26T09:35:00.113Z</updated>
  <id>http://cometrue.top/</id>
  
  <author>
    <name>海天心Y2kking</name>
    <email>cometruetop@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>一个个人胜过基金的优势</title>
    <link href="http://cometrue.top/2017/02/26/%E4%B8%80%E4%B8%AA%E4%B8%AA%E4%BA%BA%E8%83%9C%E8%BF%87%E5%9F%BA%E9%87%91%E7%9A%84%E4%BC%98%E5%8A%BF/"/>
    <id>http://cometrue.top/2017/02/26/一个个人胜过基金的优势/</id>
    <published>2017-02-26T09:04:05.000Z</published>
    <updated>2017-02-26T09:35:00.113Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center"><br></blockquote><img src="http://olkkce4gd.bkt.clouddn.com/%E5%89%8D%E9%9D%A2.PNG" class="full-image"></p>
<h1 id="一、大众理财的大众情人"><a href="#一、大众理财的大众情人" class="headerlink" title="一、大众理财的大众情人"></a>一、大众理财的大众情人</h1><blockquote>
<p>你不理财财不理你。</p>
</blockquote>
<p>在一个全民理财的年代，似乎不知道一些理财方面的知识就有点脱离时代。<br>如果你随意翻翻市面上众多的理财书，就会发现里面所写的理财或大众投资选择基本就那么几个——笔者不知道是我们国家在个人投资领域的局限性还是其他什么原因造成这些理财书在实质内容都比较相近？<br>并且差不多每一本理财书里都有一项不可或缺的内容：基金。<br>诚然，推荐购买基金确实是一个不错的选择。<br>因为，就连巴菲特也曾在致股东的信中毫不避讳地提及：若立遗嘱，其名下90%的现金将让托管人购买指数基金。<br>但是又有多少人在投资基金前，曾认真看过基金购买条款里的具体内容呢？</p>
<h1 id="二、基金分类"><a href="#二、基金分类" class="headerlink" title="二、基金分类"></a>二、基金分类</h1><p>似乎不少人并不清楚基金到底有哪几种。多数传统的基金书籍和基金网站往往是按照投资对象的不同，主要将基金分成如下几大类：<br><img src="http://upload-images.jianshu.io/upload_images/4542536-5c5a8b965b57e64a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h1 id="三、设计上的天生缺陷"><a href="#三、设计上的天生缺陷" class="headerlink" title="三、设计上的天生缺陷"></a>三、设计上的天生缺陷</h1><p>按照上面图中根据投资对象将基金分为几大类型，分类逻辑还是非常清晰的。<br>但，基金设计上天生存在一个缺陷却不被大多数人所注意。比如：股票基金以股票投资为主，一般仓位为80%-95%；债券基金以债券投资为主，一般仓位为至少8成以上。<br>你如果有对基金合同进行研究，就会发现大多数合同里都有个持仓限制，并且往往该基金往往不能空仓。这意外着什么呢？</p>
<p>大家都知道经济发展必然要遵循一定的商业周期或景气循环，即是说社会经济发展是一个不断起起伏伏的状态，如果对应到股价走势上，就是有时上涨，有时下跌的一个波动过程。<br>可是由于基金本身在设计上的缺陷决定了在熊市来临或对未来发展判断不清晰时，就算基金经理们不看好价格未来的走势发展，他们也只能采取减仓或对冲的手法来减少损失。 </p>
<h1 id="四、个人投资者的优势"><a href="#四、个人投资者的优势" class="headerlink" title="四、个人投资者的优势"></a>四、个人投资者的优势</h1><p>同基金等机构投资者相比较，一般认为个人投资者有两大显著优势：小资金的灵活性和交易的自主性。</p>
<h2 id="1-灵活性"><a href="#1-灵活性" class="headerlink" title="1.灵活性"></a>1.灵活性</h2><p>当资金在进出场时与市场之间必然会产生一定的相互影响。就像一颗大石头掉进水里，会比一颗小石子飞溅起更大的水花。何况，有些激流拐弯处，通道大小还有限制，小船更容易掉头。</p>
<h2 id="2-自主性"><a href="#2-自主性" class="headerlink" title="2.自主性"></a>2.自主性</h2><p>基金不仅在合同设计时，会有最低持仓的要求，而且基金每年年底都会进行相应排行，基金的绩效考核机制也影响着基金经理们的决策。为了不被投资者抛弃，也为了自己丰厚的年终奖金，基金经理或者机构投资者会选择追求短期的获利，并且出于合同条款的限制，很多股票型基金还必须持有较高仓位，因此在熊市中亏损是无法避免的。</p>
<h1 id="五、实战"><a href="#五、实战" class="headerlink" title="五、实战"></a>五、实战</h1><p><img src="http://upload-images.jianshu.io/upload_images/4542536-0e494158861d8ee9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>“最近黑色的波动简直逆天了”——一位群友的感慨——让我想起一句话：</p>
<blockquote>
<p>选择既是一种恩赐，也是一种诅咒。有时候，不做出选择才是明智之举。</p>
</blockquote>
<p>当你看不懂行情的时候，其实你可以做一个选择：就是在场外静静地看着，这可能是最好的选择。</p>
<p>因为，交易致胜的前提不正是因为你确实能做对你所认为能看懂的行情吗？只有这样，长期而言才有一致性的胜算存在。</p>
]]></content>
    
    <summary type="html">
    
      不要忽略了个人投资者最大的优势！
    
    </summary>
    
      <category term="交易" scheme="http://cometrue.top/categories/%E4%BA%A4%E6%98%93/"/>
    
      <category term="理念" scheme="http://cometrue.top/categories/%E4%BA%A4%E6%98%93/%E7%90%86%E5%BF%B5/"/>
    
    
      <category term="选择" scheme="http://cometrue.top/tags/%E9%80%89%E6%8B%A9/"/>
    
      <category term="确定性" scheme="http://cometrue.top/tags/%E7%A1%AE%E5%AE%9A%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>传统技术分析：突破之假突破</title>
    <link href="http://cometrue.top/2017/02/18/%E4%BC%A0%E7%BB%9F%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90%EF%BC%9A%E7%AA%81%E7%A0%B4%E4%B9%8B%E5%81%87%E7%AA%81%E7%A0%B4/"/>
    <id>http://cometrue.top/2017/02/18/传统技术分析：突破之假突破/</id>
    <published>2017-02-18T11:58:15.000Z</published>
    <updated>2017-02-18T12:48:04.107Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://olkkce4gd.bkt.clouddn.com/%E8%B5%B5%E4%BA%91%E5%9B%BE%E7%89%87%E6%9D%A5%E6%BA%90%E7%BD%91%E7%BB%9C.png" alt="赵云图片来源网络"> </p>
<blockquote class="blockquote-center">阴阳相生相克是事物的普遍规律,是事物内部不可分割的两个方面。</blockquote>

<h1 id="一、正与反"><a href="#一、正与反" class="headerlink" title="一、正与反"></a>一、正与反</h1><p>在<a href="http://www.jianshu.com/p/8d4907798106" target="_blank" rel="external">《看！红包~》</a>一文中，我们小聊了下突破，知道突破的形态比较多，不管是突破盘整区间，还是突破直线类（比如头肩底、趋势线等等）都要有个相对应的参照物。但是，正如每一枚硬币都有两面，既然世间有突破一物，那必然就有相应的假突破的情况存在。</p>
<h1 id="二、什么是假突破"><a href="#二、什么是假突破" class="headerlink" title="二、什么是假突破"></a>二、什么是假突破</h1><h2 id="1、百度百科定义"><a href="#1、百度百科定义" class="headerlink" title="1、百度百科定义"></a>1、百度百科定义</h2><p>股票市场最常见的骗线有假突破一说，即可以是向上假突破，也可以是向下假突破。以向上假突破为例，当价格K线突破前期重要阻力后，短线出现一定程度的拉高。一般情形下，这种形态被认为新的上升空间打开，交易者可以进场做多，或在回踩支撑线时进场。然而，随后的K线回踩过于猛烈，导致价格迅速回到突破之前的阻力位下方，开始大幅反向运动并引发一轮跌势，令短线买入者全部被套。</p>
<h2 id="2、简单点说"><a href="#2、简单点说" class="headerlink" title="2、简单点说"></a>2、简单点说</h2><p>我认为：假突破是相对真突破而言，就是行情并没走出我们预期的猛烈走势。</p>
<p>通常指的是两种情形：</p>
<ul>
<li>假突破一般是突破盘整区间或相对直线，但是很快就反转。</li>
<li>当指标或交易系统发出来交易信号，但是没有达到预期的利润目标走势反转。</li>
</ul>
<h1 id="三、怎么办"><a href="#三、怎么办" class="headerlink" title="三、怎么办"></a>三、怎么办</h1><h2 id="1、客观面对"><a href="#1、客观面对" class="headerlink" title="1、客观面对"></a>1、客观面对</h2><p>如果你已经有过一段时间的交易经历，你是否曾因为没能捕捉到突破信号，而错过一波大行情而惋惜？你是否又曾因为对出现的假突破买卖信号没有心理准备，而且没能及时扭转思维定势，后来造成大额亏损？</p>
<p>就像矛与盾的选择，有人喜欢做突破，有人喜欢等待假突破的到来。突破和假突破：没有好与不好之分。关键看你怎么用。</p>
<h2 id="2、危机与机会"><a href="#2、危机与机会" class="headerlink" title="2、危机与机会"></a>2、危机与机会</h2><p>假突破信号出现有时也是一个进场的机会，因为反转后的反向行情幅度有时相当大。</p>
<p>如果原先依据突破信号入场的，没有即时止损，将造成相当大的损失。</p>
<p>但是，如果即时止损，反手操作，获利空间也相当可观。</p>
<h1 id="四、实战"><a href="#四、实战" class="headerlink" title="四、实战"></a>四、实战</h1><p><img src="http://upload-images.jianshu.io/upload_images/4542536-d8d9d9fecd6dccab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="玉米1705合约日K线图"></p>
<p>在2月8日的文章中，我们原判断玉米可能是日线级别的向上突破。</p>
<p>但是，当行情走了3天后，价格还仍然在周一收盘位置附近晃悠，这时就要反思下：原来的判断是否正确，原来判断成立的依据是否还在。</p>
<p>所谓的突破，就应该有突破的样子——至少也要干净利落——你可以想象下赵子龙在曹操百万军中三进三出的情形。</p>
<p>再看图表，会发现价格虽然突破了1月24日的黄线位置，但是却无力有效突破红线的1597价位（这也是从低点1391开始的重要结构位)，那么当价格再次以大阴线的形式回到1591以下时，就要考虑是否是假突破，是否应该适当放空操作。</p>
<p>如果您有什么问题，欢迎下方留言进行探讨~</p>
<hr>
<blockquote>
<p>既然来了，留下个喜欢再走吧，鼓励我继续创作……<br>如果喜欢我的文章，那就关注我的简书账号或简信撩我吧，我们一起做朋友~~<br>欢迎关注个人微信公众号：<a href="http://mp.weixin.qq.com/s/fefeEsv-AQeZncj0v6w7Cg" target="_blank" rel="external">海天心</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      本系列缘自“自由、开放、合作、共享”的互联网精神。
    
    </summary>
    
      <category term="交易" scheme="http://cometrue.top/categories/%E4%BA%A4%E6%98%93/"/>
    
      <category term="它山之石" scheme="http://cometrue.top/categories/%E4%BA%A4%E6%98%93/%E5%AE%83%E5%B1%B1%E4%B9%8B%E7%9F%B3/"/>
    
    
      <category term="技术分析" scheme="http://cometrue.top/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/"/>
    
      <category term="假突破" scheme="http://cometrue.top/tags/%E5%81%87%E7%AA%81%E7%A0%B4/"/>
    
  </entry>
  
  <entry>
    <title>小议技术分析</title>
    <link href="http://cometrue.top/2017/02/13/%E5%B0%8F%E8%AE%AE%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/"/>
    <id>http://cometrue.top/2017/02/13/小议技术分析/</id>
    <published>2017-02-13T15:23:21.000Z</published>
    <updated>2017-02-13T16:11:02.851Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">道可道，非常道。名可名，非常名。——《道德经》</blockquote><br><img src="http://upload-images.jianshu.io/upload_images/4542536-64a925e4b6558e97.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="full-image"></p>
<hr>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="一、交易流派"><a href="#一、交易流派" class="headerlink" title="一、交易流派"></a>一、交易流派</h2><p>根据十来年的观察和研究，窃以为交易流派主要有以下几大类：</p>
<h3 id="1、基本分析"><a href="#1、基本分析" class="headerlink" title="1、基本分析"></a>1、基本分析</h3><p>即我们通常所的基本面分析，“基本面”从字面上的意思可以理解为共同拥有的属性指标这一方面。以判断金融市场未来走势为目标，对经济和政治数据的进行透彻分析。</p>
<p>一般我们所讲的基本面分析多以股票证券作为操作对象，根据股票证券的内在价值为依据，着重于对影响证券价格及其走势的各项因素进行分析，以此决定投资购买何种证券及何时购买。</p>
<p>这些因素包括宏观经济面、公司主营业务所处行业、公司业务同行业竞争水平和公司内部管理水平包括对管理层的考察等诸多方面。</p>
<p>基本分析的假设前提是：证券的价格是由其内在价值决定的，价格受政治的、经济的、心理的等诸多因素的影响而频繁变动，很难与价值完全一致，但总是围绕价值上下波动。理性的投资者应根据证券价格与价值的关系进行投资决策。</p>
<p>基本分析主要适用于周期相对比较长的证券价格预测、相对成熟的证券市场以及预测精确度要求不高的领域。</p>
<h3 id="2、技术分析"><a href="#2、技术分析" class="headerlink" title="2、技术分析"></a>2、技术分析</h3><blockquote>
<p>技术分析是指以市场行为为研究对象，以判断市场趋势并跟随趋势的周期性变化来进行股票及一切金融衍生物交易决策的方法的总和。技术分析认为市场行为包容消化一切信息、价格以趋势方式波动、历史会重演。  ——<a href="http://baike.baidu.com/item/技术分析" target="_blank" rel="external">百度百科</a></p>
</blockquote>
<p>综合市面上的各种说法：技术分析是以预测市场价格变化但未来趋势为目的，以图表为主要手段对市场行为进行但研究。</p>
<p>而所谓市场行为包括三方面的内容：a.市场价格；b.成交量（持仓量）；c.价和量的变化以及完成这些变化所经历的时间。</p>
<h3 id="3、心理分析"><a href="#3、心理分析" class="headerlink" title="3、心理分析"></a>3、心理分析</h3><p>对投资者来说,心理分析主要分为两个方向：对个体的心理分析和对市场的心理分析。 </p>
<p>个体心理分析的目标，是解决投资者在投资决策过程中的心理障碍问题。投资者在投资决策过程中产生了心理障碍问题时，例如犹豫不决、冲动、畏惧等等，其原因往往是由于某一心理欲望与现实发生了冲突。而这种欲望及其冲突，投资者往往是难以自知的，因此，往往需要心理医生的帮助。如果不通过适当的心理分析，投资者往往很难找到自己真正的病因所在，并进而找到根治的办法。这无疑将最终阻碍投资者在投资市场获得成功。</p>
<p>市场心理分析的目标是解决投资者对市场中其他投资者的心理活动特征的把握问题，主要是对人类群体的心理分析。关于人类群体的心理分析，由于投资者更加看重市场心理因素对市场价格波动的影响，所以从二十世纪八十年代以来有了被更多关注的趋势。对人类群体心理分析的方法，主要有勒旁的人类群体心理理论和尼尔的逆向思维理论。</p>
<p>对投资心理分析高度重视的少数投资者主要是若干资深的投资家。比如说索罗斯的反射理论就有很大的心理分析的因素。</p>
<h3 id="4、量化交易"><a href="#4、量化交易" class="headerlink" title="4、量化交易"></a>4、量化交易</h3><blockquote>
<p>量化交易是指以先进的数学模型替代人为的主观判断，利用计算机技术从庞大的历史数据中海选能带来超额收益的多种“大概率”事件以制定策略，极大地减少了投资者情绪波动的影响，避免在市场极度狂热或悲观的情况下作出非理性的投资决策。   ——<a href="http://baike.baidu.com/item/量化交易" target="_blank" rel="external">百度百科</a></p>
<p>量化交易是指借助现代统计学和数学的方法，利用计算机技术来进行交易的证券投资方式。量化交易从庞大的历史数据中海选能带来超额收益的多种“大概率”事件以制定策略，用数量模型验证及固化这些规律和策略，然后严格执行已固化的策略来指导投资，以求获得可以持续的、稳定且高于平均收益的超额回报。  ——<a href="http://wiki.mbalib.com/wiki/量化交易" target="_blank" rel="external">智库百科</a></p>
</blockquote>
<p>在尚未深入研究该领域的前提下，我觉得量化交易的核心可能是制定和组合合理的量化策略——是指使用计算机作为工具，通过一套固定的逻辑来分析、判断和决策。量化策略既可以自动执行，也可以人工执行。</p>
<p>量化交易最著名的代表人物应当非詹姆斯·西蒙斯莫属了，他同时也是一位世界级的数学家，还是当代最伟大的对冲基金经理之一。</p>
<h3 id="5、随心所欲"><a href="#5、随心所欲" class="headerlink" title="5、随心所欲"></a>5、随心所欲</h3><p>这类交易人群在我们身边也非常多见，最大的几个特点：想买的时候就买，高兴的时候就买，大家买的时候也买，听到小道消息就买，电视上的股评家推荐了就买…… </p>
<p>这类交易最大的弊端在于：没有一套可以有效控制且能够重复复制的成功经验，故不在此处做更深入的探讨。</p>
<h2 id="二、我眼中的交易分析"><a href="#二、我眼中的交易分析" class="headerlink" title="二、我眼中的交易分析"></a>二、我眼中的交易分析</h2><h3 id="1、大致模样"><a href="#1、大致模样" class="headerlink" title="1、大致模样"></a>1、大致模样</h3><p>主要根据历史数据的研究，将当下的市场行为与历史情况进行对比、分析，从而达到顺应趋势，即以判定和追随既成趋势的目的，并选择相对较好的动手时机。常用的手段、方法：图表分析、数据统计、周期推算……</p>
<h3 id="2、选择她的好处"><a href="#2、选择她的好处" class="headerlink" title="2、选择她的好处"></a>2、选择她的好处</h3><ul>
<li>缺乏信息优势，无法获取完备的基础面分析的即时资料。</li>
<li>方便易得的图表能够提供简洁明了的价格历史数据。</li>
<li>她是切实可行、卓有成效的。</li>
<li>灵活性和适应性。比如：适用于任何交易媒介和任何时机尺度。</li>
<li>有助于确定现实而恰当的止损点。</li>
<li>有助于做出相对正确的时机选择。</li>
<li>上面尚未提及的其他优势。</li>
</ul>
<h3 id="3、为什么选择她"><a href="#3、为什么选择她" class="headerlink" title="3、为什么选择她"></a>3、为什么选择她</h3><ul>
<li>价格是随机的吗？</li>
</ul>
<p>有一个原本在高知识阶层发起并逐渐流行开来的随机漫步理论，它认为：价格变化是随机而不可预测的——为价格变化在顺序上相互独立，因而价格历史并不是未来价格方向的可靠线索——就像一个在广场上行走的人一样，价格的下一步将走向哪里，是没有规律的。</p>
<p>事实上，所有的市场确实都具备一定的随机性，或者说“噪音”，但若上以为所有价格变化都是随机而来，显然并非实情。虽然有些人没办法解释价格形态，但他们也无法证明价格形态不存在。</p>
<blockquote>
<p>满目随机其实只是无力辨识系统性价格变化形态的代名词，</p>
</blockquote>
<p>如果市场真的是随机的，那你为什么还要参与这个市场呢?</p>
<p>如果所有的价格变化之间都没有关联性，那你又是通过什么理由，来进行交易的呢？</p>
<ul>
<li>交易的本质</li>
</ul>
<p>交易，简而言之，窃以为就是做一个选择：在当下，买入、卖出或者什么都不做。</p>
<p>我不相信价格的产生完全是随机漫的结果，我也不相信：一个人没有预期也能进行交易。</p>
<p>上面这句话，能不能换一个角度来看：交易其实是一种选择，当你选择了一种信仰后，你愿意去相信她。</p>
<p>如果你相信：可以从各类供需平衡表、财务报表……各种数据来推测未来价格的合理价位，这是不是一种选择，选择你所相信的基本面分析？</p>
<p>如果你相信：当大多数人都对股市开始绝望后，股市即将见底，所以可以择机买入操作，这是不是也是一种选择？</p>
<p>如果你相信：不同的组合策略可以通过分散式布局跑赢市场，这是不是也是一种选择？</p>
<p>如果你相信：听闻某公司老总叫其家人大肆买进，因此你相信该股后市铁定大涨，从而做出买入的行为，这是不是也是一种选择？</p>
<p>……</p>
<p>总之，你选择了你心中的标准，心动后行动，完成了一次又一次的交易，是这样的吗？<br>如果真是如此，那选择技术流和上面这些选择又有什么本质的区别呢？</p>
<h2 id="三、技术分析到底是什么"><a href="#三、技术分析到底是什么" class="headerlink" title="三、技术分析到底是什么"></a>三、技术分析到底是什么</h2><h3 id="1、为何褒贬不一"><a href="#1、为何褒贬不一" class="headerlink" title="1、为何褒贬不一"></a>1、为何褒贬不一</h3><p>我的观点是：技术分析就是经验总结。</p>
<p>首先，技术分析是成千上万的市场参与者数百年的心血结晶。</p>
<p>其次，技术分析具有明显的经验性，具有浓烈的主观色彩。</p>
<p>最为关键的，技术分析是艺术而不是科学。</p>
<p>图表和数据的实际作用依赖于各个交易者成功地将个人的经验和标准概念结合的能力。采用正确的方法，这些图表和数据就能在预测市场主要走势时产生极大的价值，</p>
<h3 id="2、是否任何情况下都是有效的"><a href="#2、是否任何情况下都是有效的" class="headerlink" title="2、是否任何情况下都是有效的"></a>2、是否任何情况下都是有效的</h3><ul>
<li>不是所有的图表是有效</li>
</ul>
<blockquote>
<p>历史会重演</p>
</blockquote>
<p>技术分析的前提条件之一，是认为技术分析和市场行为学与人类心理学有着千丝万缕的关系。比如：价格形态通过一定特定的价格图表形状表现出来，而这些图表或图形表示了人们对某市场看好或看淡的心理。</p>
<p>技术分析之所以有效，是基于这些价格图表背后所反映出来的人性。正因为千百年来人性不变，所以技术分析才会有效。</p>
<blockquote>
<p>投机如山岳一样古老,华尔街没有新鲜事。</p>
</blockquote>
<p>在我观念里投机不同于赌博。</p>
<p>若用随机抛硬币产生的结果分别来画一个价格走势图，技术分析对这个价格走势图就是无效的，因为这是一个随机形成的图表，其背后形成的机理并非是因为贪婪、恐惧、希望等心理作用而引发的实际交易行为。</p>
<ul>
<li>不是任何时刻都有效<blockquote>
<p>没有什么事情是必然发生的。</p>
</blockquote>
</li>
</ul>
<p>人类对于股市波动逻辑的认知，是一个极具挑战性的世界级难题，迄今为止尚没有任何一种理论和方法是令人信服、经得起时间检验的。</p>
<p>自证券市场产生以来，人们就开始了对于各种股票投资理论的探索，形成了多种多样的理论成果。实际上，包括技术分析在内的各种交易理论和交易方法，都是100多年来前行者进行长期观察并积累经验，逐步归纳总结出来的。</p>
<p>根据客观现象得出的经验规律并非客观定理，都有其一定的局限性和有效性。但是，我们并不能因此而否定来技术分析的主要潜在好处。</p>
<p>打个不恰当的比喻：会走路的成年人难道都不会摔跤吗？</p>
<h3 id="3、怎样看待技术分析"><a href="#3、怎样看待技术分析" class="headerlink" title="3、怎样看待技术分析"></a>3、怎样看待技术分析</h3><ul>
<li>团队作战</li>
</ul>
<p>我们学好来技术分析是拿来做什么用的？<br>看到这里，你可能会说：学技术分析当然是拿来服务交易用的。<br>换句话，粗俗点说：学技术分析是因为我们想通过交易切切实实地赚到钱。</p>
<p>但是，要赚钱，或者说要不是偶然性地赚钱，单靠技术分析就行了吗？</p>
<p>笔者认为所谓的“一招鲜吃遍天”是建立在一个完整的系统里，就如本文开头提到的：至少道、法、术三者缺一不可。</p>
<ul>
<li>怎么用</li>
</ul>
<p>我认为大部分的交易行为都是要对下一步（不同人的概念不同，可能是1分钟，也可能是1年后）的价格变化做出预期——当然这个预期的理由可能各不一样——从而做出不同的策略。</p>
<blockquote>
<p>价格以趋势方式演变</p>
</blockquote>
<p>“趋势”概念是技术分析的核心。</p>
<p>技术分析就是利用图表分析、数学和统计学等方法，通过对历史数据的研究，从而把握当前的趋势，并顺势而为，直到有足够的证据证明趋势发生反转为止。</p>
<p>而根据牛顿惯性定律的应用可知：顺势而为，最简单易行的操作便是坚定不移地顺应一个既成趋势，直到有反向的征兆为止，</p>
<ul>
<li>交易无涯，顺势而为</li>
</ul>
<p>为了提高胜率，每个交易者必须独自评价图表分析，通过不断学习、不断检讨，来提高自己应用技术分析的水平，并可以结合基本分析等其他交易的“术”来得出他们对市场分析的结论。</p>
<p>争取在一个趋势发生发展的早期，及时准确地把它揭示出来，从而达到顺着趋势交易的目的。</p>
<hr>
<blockquote>
<p>既然来了，留下个喜欢再走吧，鼓励我继续创作……<br>如果喜欢我的文章，那就关注我的简书账号或简信撩我吧，我们一起做朋友~~<br>欢迎关注个人微信公众号：<a href="http://mp.weixin.qq.com/s/fefeEsv-AQeZncj0v6w7Cg" target="_blank" rel="external">海天心</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      如果把交易理念、交易策略和交易技术看成是交易中但“道、法、术”，那么我今天想来谈谈这个“术”里面的部分内容。
    
    </summary>
    
      <category term="交易" scheme="http://cometrue.top/categories/%E4%BA%A4%E6%98%93/"/>
    
      <category term="理念" scheme="http://cometrue.top/categories/%E4%BA%A4%E6%98%93/%E7%90%86%E5%BF%B5/"/>
    
    
      <category term="技术分析" scheme="http://cometrue.top/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/"/>
    
      <category term="交易理念" scheme="http://cometrue.top/tags/%E4%BA%A4%E6%98%93%E7%90%86%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>自建博客（八）再次具体实践下怎么撰文和发表</title>
    <link href="http://cometrue.top/2017/02/10/%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%85%AB%EF%BC%89%E5%86%8D%E6%AC%A1%E5%85%B7%E4%BD%93%E5%AE%9E%E8%B7%B5%E4%B8%8B%E6%80%8E%E4%B9%88%E6%92%B0%E6%96%87%E5%92%8C%E5%8F%91%E8%A1%A8/"/>
    <id>http://cometrue.top/2017/02/10/自建博客（八）再次具体实践下怎么撰文和发表/</id>
    <published>2017-02-10T07:18:56.000Z</published>
    <updated>2017-02-12T15:59:45.533Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、最核心的写作相关命令和格式"><a href="#一、最核心的写作相关命令和格式" class="headerlink" title="一、最核心的写作相关命令和格式"></a>一、最核心的写作相关命令和格式</h1> <a id="more"></a> 
<p>博客嘛，最核心的功能还是要有博文，在这内容为王的时代，写文章还是相当重要的！</p>
<h2 id="1-已知命令"><a href="#1-已知命令" class="headerlink" title="1.已知命令"></a>1.已知命令</h2><ul>
<li><p>写文章<br>你可以执行下列命令来创建一篇新文章。</p>
<blockquote>
<p>hexo new [layout] <title>    #新建文章，可以改成中文的，如“新文章”</title></p>
</blockquote>
</li>
<li><p>删除文章<br>先删除目标文章，然后重新运行</p>
<blockquote>
<p>hexo clean<br>hexo g -d</p>
</blockquote>
</li>
<li><p>写完文章后，你可以使用</p>
<blockquote>
<p>hexo g  #生成静态文件<br>hexo s  #在本地预览效果<br>hexo d  #同步到github，然后使用<a href="http://huangjunhui.github.io/" target="_blank" rel="external">http://huangjunhui.github.io</a>进行访问</p>
</blockquote>
</li>
</ul>
<h2 id="2-现状"><a href="#2-现状" class="headerlink" title="2.现状"></a>2.现状</h2><ul>
<li><p>你可以在博客目录（我的路径是：D:\hexo）下打开“Git Bash Here”输入以下命令：</p>
<p> hexo new ‘测试’  #系统会在source_posts创建一个测试.md文件</p>
</li>
<li><p>文章的永久链接格式title属性取自该文件名。默认<em>（当然，你也可以在 <a href="https://hexo.io/zh-cn/docs/permalinks.html" target="_blank" rel="external">站点配置_config.yml 文件中修改</a>，见后文）</em>生成的永久链接格式为:<a href="http://yoursite.com/year/:month/:day/:title/。" target="_blank" rel="external">http://yoursite.com/year/:month/:day/:title/。</a><br><img src="http://upload-images.jianshu.io/upload_images/4542536-849c6fcd24fbace3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="创建一个名为“测试.md”文件后生成的永久链接格式"></p>
</li>
<li>你打开（D:\hexo:\source:_posts）目录下的这个“测试.md”文件，会发现Hexo默认的文件头只有title属性。</li>
<li>而执行“hexo s”命令，启动服务器，在浏览器中打开<a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a> ，即可看到：在打开新建博文顶部，只能看到文件名和建立的日期。</li>
</ul>
<p>如果你想增添标签等内容，那我们一起学习接下来的内容吧。</p>
<h2 id="3-添加-分类和标签页面"><a href="#3-添加-分类和标签页面" class="headerlink" title="3.添加 分类和标签页面"></a>3.添加 <a href="https://hexo.io/zh-cn/docs/front-matter.html" target="_blank" rel="external">分类和标签</a>页面</h2><ul>
<li><p>分类和标签<br>您可以在 Front-matter 中分类和标签设置。</p>
<blockquote>
<p>只有文章支持<a href="https://hexo.io/zh-cn/docs/front-matter.html" target="_blank" rel="external">分类和标签</a></p>
</blockquote>
<ul>
<li>分类具有顺序性和层次性</li>
</ul>
<p>在其他系统中，分类和标签听起来很接近，但是在 Hexo 中两者有着明显的差别，<br>也就是说 Foo, Bar 不等于 Bar, Foo；<br>而标签没有顺序和层次。</p>
<ul>
<li>Hexo不支持指定多个同级分类，比如：<br>categories:</li>
</ul>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4542536-b6e78642d7e0a0b1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="对技术小白来说，官方网页上这有个坑。。。"></p>
<ul>
<li><p>可能需要安装的插件</p>
<ul>
<li><p>如果你需要显示标签<br>新建「标签」页面，并在菜单中显示「标签」链接。「标签」页面将展示站点的所有标签，若你的所有文章都未包含标签，此页面将是空的。 </p>
<p>在博客目录（我的路径是：D:\hexo）下打开“Git Bash Here”输入</p>
<pre><code>hexo new page tags
</code></pre><p>然后到新建的目录（D:\hexo\source\tags）下，打开<code>index.md</code>文件进行修改：</p>
<blockquote>
<p>注意：如果有启用 多说 或者 Disqus 评论，页面也会带有评论。 若需要关闭的话，请添加字段 comments 并将值设置为 false，如：</p>
</blockquote>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4542536-70775fb7bd3450a9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<ul>
<li><p>如果你需要显示分类<br>新建「分类」页面，并在菜单中显示「分类」链接。「分类」页面将展示站点的所有分类，若你的所有文章都未包含分类，此页面将是空的。 </p>
<p>同样，在博客目录（我的路径是：D:\hexo）下打开“Git Bash Here”输入</p>
<pre><code>hexo new page categories
</code></pre><p>然后到新建的目录（D:\hexo\source\categories）下，打开<code>index.md</code>文件进行修改：</p>
<blockquote>
<p>注意：如果有启用 多说 或者 Disqus 评论，页面也会带有评论。 若需要关闭的话，请添加字段 comments 并将值设置为 false，如：</p>
</blockquote>
</li>
</ul>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4542536-13663a2e4ed13c1f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<ul>
<li><p>一些细节</p>
<ul>
<li><p>单个标签和分类的显示<br>方法很简单，直接输入即可。<br>只要<strong>注意</strong>一点——所有文件<code>：</code>后面都必须有个空格，不然会报错。</p>
</li>
<li><p><strong>多个标签和分类的显示方法</strong> （<em>此处及后面的Front-matter模板定制细节，我花了好多时间才整明白。。。希望我的文章能帮你少走一些弯路~~~</em>）<br>下面两种方式均可：</p>
</li>
</ul>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4542536-865a46f0b271ad8b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="注意上图，红色的两个方框内才 是多个显示的正确语法"></p>
<h1 id="二、定制个性化模板"><a href="#二、定制个性化模板" class="headerlink" title="二、定制个性化模板"></a>二、定制个性化模板</h1><blockquote>
<p><em>这部分内容是我踩过坑后，花了好多时间才总结出来的，希望我的分享对你有用</em></p>
</blockquote>
<h2 id="1-再说布局Layout"><a href="#1-再说布局Layout" class="headerlink" title="1.再说布局Layout"></a>1.再说布局<a href="https://hexo.io/zh-cn/docs/writing.html#布局（Layout）" target="_blank" rel="external">Layout</a></h2><ul>
<li>关于布局（Layout）<br>Hexo 有三种默认布局：post、page 和 draft，它们分别对应不同的路径，而您自定义的其他布局和 post 相同，都将储存到 source/_posts 文件夹。</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">布局</th>
<th style="text-align:center">路径</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">post</td>
<td style="text-align:center">source/_posts</td>
</tr>
<tr>
<td style="text-align:center">page</td>
<td style="text-align:center">source</td>
</tr>
<tr>
<td style="text-align:center">draft</td>
<td style="text-align:center">source/_drafts</td>
</tr>
</tbody>
</table>
<ul>
<li>布局的选择<ul>
<li>默认布局<br>当我们执行下列命令来创建一篇新文章时<br>   hexo new [layout] <title><br>其中的[layout]命令是拿来指定文章布局的，是可选参数，系统默认为 post（比如当你运行 <code>hexo new test</code>命令新建了一个 <code>test.md</code>文件时），而 layout 的选项就是 scaffolds 目录下的文件，也就是默认的就是 layout的选项即为<br><code>draft.md</code><br><code>page.md</code><br><code>photo.md</code><br><code>post.md</code><br>通过这种方法，如果想增加一个layout的选项，即在这个目录下增加一个文件，那个文件名即为新的选项，新的文件将会在(D:\hexo)source_post\ 目录下。</title></li>
<li>更改默认布局<br>您可以在命令中指定文章的布局 [layout]，<br>或者<br>通过修改<strong>站点配置</strong>文件 _config.yml 中的 default_layout 参数来指定默认布局(在后文的配置中会提到具体修改参数），这样所有的文章都会以md形式保存在（D:\hexo目录下的）source文件夹的_post文件夹中，只要在_post文件夹中新建md类型的文档，就能在执行hexo g的时候被渲染。 </li>
</ul>
</li>
</ul>
<blockquote>
<p><strong>不要处理我的文章</strong><br>如果你不想你的文章被处理，你可以将 Front-Matter 中的layout: 设为 false 。</p>
</blockquote>
<h2 id="2-修改文章的永久链接格式"><a href="#2-修改文章的永久链接格式" class="headerlink" title="2.修改文章的永久链接格式"></a>2.修改文章的永久链接格式</h2><ul>
<li><p>具体参数<br>关于<a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="external">文章名称</a>和<a href="https://hexo.io/zh-cn/docs/permalinks.html" target="_blank" rel="external">永久链接（Permalinks）</a>的参数情况以及更复杂的生成方法可以具体查看官方文档。</p>
<p>hexo采用了 moment.js，如果你想研究得更深入，那么想看现实格式的具体参数可以参照 <a href="http://momentjs.com/docs/#/displaying/" target="_blank" rel="external">这里</a></p>
</li>
<li><p>修改默认的URL<br>如果你觉得默认 URL 显得比较冗长了，需要进行修改，那么可以尝试直接从<strong>站点配置</strong>文件 _config.yml 中修改成如下</p>
<pre><code>permalink: :category/:title/
</code></pre><p><em>这点我尝试没修改<strong>站点配置</strong>文件前提想，在文章的Front-matter里面直接修改，结果失败</em></p>
</li>
</ul>
<h2 id="3-定制模板"><a href="#3-定制模板" class="headerlink" title="3.定制模板"></a>3.定制模板</h2><ul>
<li><p><a href="http://wiki.jikexueyuan.com/project/hexo-document/front-matter.html" target="_blank" rel="external">Front-matter</a>是什么<br>Front-matter 是文件最上方以 -– 分隔的区域，用于指定个别文件的变量。</p>
</li>
<li><p>参数<br>你可以在<a href="https://hexo.io/zh-cn/docs/front-matter.html" target="_blank" rel="external">官方页面</a>上找到Front-matter 参数的定义，并可在模板中使用这些参数值并加以利用。</p>
</li>
<li><p>个性化的模板</p>
<blockquote>
<p>我们发布文章的时候有个想法，就是我们能不能只写文章，格式虽然 markdown 够简单，但是不免有些字段还是需要我们自己输入，例如 ## 标题、<!--more--> 这种，能否再简化一点，直接 new 文章的时候自动创建好，答案是可以的~~</p>
</blockquote>
<p>找到模板（D:\hexo\scaffolds\post.md ），在里面的内容在新建的时候，都会直接创建出来，也就是类似 template 的功能了，这样就可以在模板里创建好文章骨架，架构，以后每次创建出来的文章都是通用的结构，就可以直接开始写文章，而不必熟悉记住一些语法关键字神马的了，目前我是这样修改的：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4542536-90cfb94fefbeb710.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="海天心的POST模板"></p>
<p> 这样，以后写博文时可以直接往对应的地方写文字就可以了，机智否？</p>
</li>
<li><p>我的理解<br>作为技术小白，我在这一步折腾了很久，目前是这样理解几个参数的：</p>
<p>Hexo默认的文件头只有title、date、tags属性，生成的html会缺少Meta信息，不利于搜索引擎收录。</p>
<p>在文件头中添加keywords和description属性，是为了便于搜索。</p>
<ul>
<li><p>description<br>加了这个front-matter参数后，会对“阅读全文”显示效果有影响（<em>再往本文下面看</em>）。</p>
</li>
<li><p>keywords<br>不知道这个是不是为了有利于搜索引擎收录，我尝试了，但是在博客的显示效果上好像没什么区别，感兴趣的可以自己咨询下<a href="https://github.com/iissnan/hexo-theme-next/pull/370#event-406694380" target="_blank" rel="external">这里</a>。</p>
</li>
<li><p>其他可能可以适用的参数或变量<br>可以看看<a href="http://www.tuicool.com/articles/YneiAzy" target="_blank" rel="external">《Hexo ： （三）高级进阶》</a></p>
</li>
</ul>
</li>
</ul>
<ul>
<li><p>如何设置<a href="http://theme-next.iissnan.com/faqs.html" target="_blank" rel="external">「阅读全文」</a></p>
<ul>
<li>一般情况<br>在<em>主题配置</em>文件中找到如下字段，已修改如下：<blockquote>
<p>auto_excerpt:<br>enable: true<br>length: 150 #默认截取的长度为 150 字符，可以根据需要自行设定</p>
</blockquote>
</li>
</ul>
</li>
<li><p>几种选择<br>在首页显示一篇文章的部分内容，并提供一个链接跳转到全文页面是一个常见的需求。 NexT 提供三种方式来控制文章在首页的显示方式。 也就是说，在首页显示文章的摘录并显示 阅读全文 按钮，可以通过以下方法：</p>
<ul>
<li>在文章中使用 <!-- more --> 手动进行截断，Hexo 提供的方式(推荐)</li>
<li>在文章的 <a href="https://hexo.io/docs/front-matter.html" target="_blank" rel="external">front-matter</a> 中添加 description，并提供文章摘录</li>
<li><p>自动形成摘要，在<em>主题配置文件</em>中添加：</p>
<pre><code>auto_excerpt: 
   enable: true 
   length: 150
</code></pre><p>默认截取的长度为 150 字符，可以根据需要自行设定</p>
<blockquote>
<p>建议使用 <!-- more -->（即第一种方式），除了可以精确控制需要显示的摘录内容以外， 这种方式也可以让 Hexo 中的插件更好的识别。</p>
</blockquote>
</li>
</ul>
</li>
</ul>
<ul>
<li>我的尝试<br>Front-matter增加了description，在首页将优先显示 description（不受字数限制，但是在MD文件里书写不能换行）而且不受<!--more-->限制，其次是 excerpt（这个还没琢磨透）。</li>
</ul>
<h1 id="三、发现的一个小问题及解决办法"><a href="#三、发现的一个小问题及解决办法" class="headerlink" title="三、发现的一个小问题及解决办法"></a>三、发现的一个小问题及解决办法</h1><p>系统生成的文章目录不正确，比如像这样：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4542536-b7dde858c9d8346d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>更改<em>主题配置</em>文件（D:\hexo\themes\next_config.yml）：搜索<code>doc</code>后，进行如下修改：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4542536-7a42e5467923971a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="第二个若为true，表示开启"></p>
<p><strong>参考</strong><br>  官方给出的<a href="https://hexo.io/zh-cn/docs/front-matter.html" target="_blank" rel="external">Front-matter格式</a>和<a href="https://hexo.io/zh-cn/docs/tag-plugins.html" target="_blank" rel="external">标签插件</a></p>
]]></content>
    
    <summary type="html">
    
      虽然在[自建博客系列（四）HEXO博客的常识+更换NEXT主题](http://www.jianshu.com/p/429f1191d188)中有略微提及，这里我还是想单独列一个帖子来阐述下。
    
    </summary>
    
      <category term="践行" scheme="http://cometrue.top/categories/%E8%B7%B5%E8%A1%8C/"/>
    
      <category term="blog" scheme="http://cometrue.top/categories/%E8%B7%B5%E8%A1%8C/blog/"/>
    
    
      <category term="blog" scheme="http://cometrue.top/tags/blog/"/>
    
      <category term="github" scheme="http://cometrue.top/tags/github/"/>
    
      <category term="coding" scheme="http://cometrue.top/tags/coding/"/>
    
      <category term="hexo" scheme="http://cometrue.top/tags/hexo/"/>
    
      <category term="next" scheme="http://cometrue.top/tags/next/"/>
    
      <category term="博客" scheme="http://cometrue.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="撰文" scheme="http://cometrue.top/tags/%E6%92%B0%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>自建博客（七）Next主题配置文件中默认参数的个性化修改</title>
    <link href="http://cometrue.top/2017/02/09/%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%83%EF%BC%89Next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%B8%AD%E9%BB%98%E8%AE%A4%E5%8F%82%E6%95%B0%E7%9A%84%E4%B8%AA%E6%80%A7%E5%8C%96%E4%BF%AE%E6%94%B9/"/>
    <id>http://cometrue.top/2017/02/09/自建博客（七）Next主题配置文件中默认参数的个性化修改/</id>
    <published>2017-02-09T11:22:58.000Z</published>
    <updated>2017-02-12T11:53:01.522Z</updated>
    
    <content type="html"><![CDATA[<p>在<a href="http://www.jianshu.com/p/0fe7dd8a0e8b" target="_blank" rel="external">自建博客系列（六）Hexo博客的常用配置修改</a>中有提到——Hexo 中有两份同名的配置文件：一份位于站点根目录下（比如我的：<strong>D:\hexo_config.yml</strong>），主要包含 Hexo 本身整站的配置，称之为<strong>站点配置</strong>文件，；另一份位于主题目录（<em>D:\hexo\themes\next_config.yml</em>）下，这份配置由主题作者提供，主要用于配置主题相关的选项，我们称其为<em>主题配置</em>文件。</p>
<p>今天我们主要来看看<em>主题配置</em>文件的一些配置修改。</p>
<hr>
<p><strong>注意</strong>：请不要用系统自带的记事本打开配置文件——在正文开头，再次提醒！<br>                本人用的是Notepad++，需要的朋友可以到<a href="http://okndkdckj.bkt.clouddn.com/npp_6.9.2_Installer.exe" target="_blank" rel="external">此处:npp_6.9.2</a>下载。</p>
<h1 id="一、最权威的使用说明"><a href="#一、最权威的使用说明" class="headerlink" title="一、最权威的使用说明"></a>一、最权威的使用说明</h1><p>在官方的<a href="http://theme-next.iissnan.com/getting-started.html#theme-settings" target="_blank" rel="external">NexT使用文档</a>中有详细描述界面语言、菜单、侧栏、头像、作者昵称等选项的设置。</p>
<h1 id="二、个性化设置"><a href="#二、个性化设置" class="headerlink" title="二、个性化设置"></a>二、个性化设置</h1><h2 id="1、主题设定"><a href="#1、主题设定" class="headerlink" title="1、主题设定"></a>1、主题设定</h2><p>Scheme (在<em>主题配置</em>文件中，搜索 scheme 关键字。 你会看到有三行 scheme 的配置，将你需用启用的 scheme 前面注释 # 删除即可。）是 NexT 提供的一种特性，借助于 Scheme，NexT 为你提供多种不同的外观。同时，几乎所有的配置都可以 在 Scheme 之间共用。目前 NexT 支持三种 Scheme，他们是：</p>
<blockquote>
<p>Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白<br>Mist - Muse 的紧凑版本，整洁有序的单栏外观<br>Pisces - 双栏 Scheme，小家碧玉似的清新</p>
</blockquote>
<pre><code>Pisce Scheme
#scheme: Muse
#scheme: Mist
scheme: Pisces
</code></pre><p>三种效果呈现如下<br><img src="http://upload-images.jianshu.io/upload_images/4542536-aec07d47e2837af7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="2、菜单配置"><a href="#2、菜单配置" class="headerlink" title="2、菜单配置"></a>2、菜单配置</h2><table>
<thead>
<tr>
<th style="text-align:center">键值</th>
<th style="text-align:center">设定值</th>
<th style="text-align:center">显示文本（简体中文）</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">home</td>
<td style="text-align:center">home: /</td>
<td style="text-align:center">主页</td>
</tr>
<tr>
<td style="text-align:center">archives</td>
<td style="text-align:center">archives: /archives</td>
<td style="text-align:center">归档页</td>
</tr>
<tr>
<td style="text-align:center">categories</td>
<td style="text-align:center">categories: /categories</td>
<td style="text-align:center">分类页</td>
</tr>
<tr>
<td style="text-align:center">tags</td>
<td style="text-align:center">tags: /tags</td>
<td style="text-align:center">标签页</td>
</tr>
<tr>
<td style="text-align:center">about</td>
<td style="text-align:center">about: /about</td>
<td style="text-align:center">关于页面</td>
</tr>
<tr>
<td style="text-align:center">commonweal</td>
<td style="text-align:center">commonweal: /404.html</td>
<td style="text-align:center">公益 404</td>
</tr>
</tbody>
</table>
<p>其中</p>
<ul>
<li>显示文本的设置在（D:\hexo\themes\next\languages目录下的 ）{language}.yml （{language} 为你所使用的语言）文件中。</li>
<li>菜单项的图标名称和相对应的的图标可在<a href="http://www.fontawesome.com.cn/faicons/" target="_blank" rel="external">图标库</a>里寻找。</li>
</ul>
<h2 id="3、侧栏设置"><a href="#3、侧栏设置" class="headerlink" title="3、侧栏设置"></a>3、侧栏设置</h2><ul>
<li>显示位置和时机<ul>
<li>目前仅 Pisces Scheme 支持侧栏位置的修改。</li>
<li>显示的时机，修改 sidebar.display 的值。</li>
</ul>
</li>
</ul>
<p>*增添信息<br>找到<code>social</code>字段部分，然后在其下面增添一些个人资料并更改相应的图标设置，<br>但是<a href="http://www.fontawesome.com.cn/faicons/" target="_blank" rel="external">Fontawesome</a>毕竟是老外的东西，没有类似知乎、简书之类图标有点遗憾。</p>
<h2 id="4、开启打赏功能"><a href="#4、开启打赏功能" class="headerlink" title="4、开启打赏功能"></a>4、开启打赏功能</h2><p>越来越多的平台（微信公众平台，新浪微博，简书，百度打赏等）支持打赏功能，付费阅读时代越来越近，特此增加了打赏功能，支持微信打赏和支付宝打赏。 只需要 主题配置文件 中填入 微信 和 支付宝 收款二维码图片地址 即可开启该功能。<br>打赏功能配置示例</p>
<blockquote>
<p>reward_comment: 坚持原创技术分享，您的支持将鼓励我继续创作！<br>wechatpay: /path/to/wechat-reward-image<br>alipay: /path/to/alipay-reward-image</p>
</blockquote>
<h2 id="5、启用多说评论"><a href="#5、启用多说评论" class="headerlink" title="5、启用多说评论"></a>5、启用多说评论</h2><p>要启用此功能，需要配置 duoshuo_info 这个字段。设置如下：</p>
<blockquote>
<p>duoshuo_info:<br>  ua_enable: true<br>  admin_enable: false<br>  user_id:<br>  admin_nickname:</p>
</blockquote>
<p>其中，admin_enable 是用于显示 「博主」 文字，表明评论者是博主，此字段需要同时配置 user_id<br> 和 admin_nickname 字段。 请访问 <a href="http://dev.duoshuo.com/" target="_blank" rel="external">多说</a>，登录并访问「我的主页」获取 user_id<br> ， 此 ID 是 网址最后那串数字。</p>
<h2 id="6、增加订阅微信公众号"><a href="#6、增加订阅微信公众号" class="headerlink" title="6、增加订阅微信公众号"></a>6、增加订阅微信公众号</h2><p><em>注意： 此特性在版本 5.0.1 中引入，要使用此功能请确保所使用的 NexT 版本在此之后</em><br>在每篇文章的末尾显示微信公众号二维码，扫一扫，轻松订阅博客。<br>在微信公众号平台下载您的二维码，并将它存放于博客source/uploads/目录下。然后编辑<em>主题配置</em>文件，如下：</p>
<blockquote>
<p>wechat_subscriber:<br>  enabled: true<br>  qcode: /uploads/htx-qcode.jpg<br>  description: 欢迎您扫一扫上面的微信公众号，订阅我的博客！</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在&lt;a href=&quot;http://www.jianshu.com/p/0fe7dd8a0e8b&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;自建博客系列（六）Hexo博客的常用配置修改&lt;/a&gt;中有提到——Hexo 中有两份同名的配置文件：一份位于站点根目
    
    </summary>
    
      <category term="践行" scheme="http://cometrue.top/categories/%E8%B7%B5%E8%A1%8C/"/>
    
      <category term="blog" scheme="http://cometrue.top/categories/%E8%B7%B5%E8%A1%8C/blog/"/>
    
    
      <category term="blog" scheme="http://cometrue.top/tags/blog/"/>
    
      <category term="github" scheme="http://cometrue.top/tags/github/"/>
    
      <category term="coding" scheme="http://cometrue.top/tags/coding/"/>
    
      <category term="hexo" scheme="http://cometrue.top/tags/hexo/"/>
    
      <category term="next" scheme="http://cometrue.top/tags/next/"/>
    
      <category term="博客" scheme="http://cometrue.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="个性化" scheme="http://cometrue.top/tags/%E4%B8%AA%E6%80%A7%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>小聊“突破”</title>
    <link href="http://cometrue.top/2017/02/08/%E5%B0%8F%E8%81%8A%E2%80%9C%E7%AA%81%E7%A0%B4%E2%80%9D/"/>
    <id>http://cometrue.top/2017/02/08/小聊“突破”/</id>
    <published>2017-02-08T07:08:15.000Z</published>
    <updated>2017-02-18T12:07:20.624Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>常有朋友提及：<a href="http://mp.weixin.qq.com/s/fefeEsv-AQeZncj0v6w7Cg" target="_blank" rel="external">公众号</a>上的东东虽然挺好，但是读者们的背景是不一样的，如果能普及些交易方面的基础知识，大家的阅读体验将会更好。</p>
<p>细思，有理！</p>
<p>为人即是为己！</p>
<p>故，我将抽空将一些传统技术分析的理念结合近期或经典的图表做一个基础知识的梳理工作。</p>
<blockquote>
<p>似乎有点标题党的味道，这个题目是看到朋友的文章：<a href="http://weibo.com/ttarticle/p/show?id=2309404072817703429802" target="_blank" rel="external">红包派系列（一）地产投资</a>而临时起意的 ^_^</p>
</blockquote>
<hr>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h1 id="一、什么是突破"><a href="#一、什么是突破" class="headerlink" title="一、什么是突破"></a>一、什么是突破</h1><ol>
<li><p>百度百科<br>突破是一个多义词，在<a href="http://baike.baidu.com/link?url=iCUUYC5b_6F8RdOM4AtVVVFosC7DsCs5B-b2geoUXY07yLQlDyATbfahl_DOYE6rvAJlWKHjaBmZo1EjPLlThEbpWS480bu0dOmSQqIIByu" target="_blank" rel="external">百度百科</a>上有11个义项。其中与本文相关的主要是3个：</p>
<ul>
<li>突破 （汉语词语）：<ul>
<li>[break through;effect a breakthrough]∶打开缺口突破一点。</li>
<li>[surmount;break;top]∶超过；打破突破定额突破难关。</li>
</ul>
</li>
<li>突破 （股市用语）：<br>指股价经过一段<a href="http://baike.baidu.com/view/10968.htm" target="_blank" rel="external">盘档</a>时间后，产生的一种价格波动。一般指股价向上突破阻力位。</li>
<li>突破 （军事术语）：<br>突破是一种进攻方式,旨在通过打开一个过几个突破口,向纵深或翼侧机动,从而摧毁敌军占领的筑垒防线。</li>
</ul>
</li>
<li><p>我的理解</p>
<ul>
<li><p>前提<br>既然名为突破，那就必然要先有个参照物，而且有了这个参照物才能有后面所谓的突破。</p>
<p>然，这个参照物可以有很多：有的人喜欢找前高或前低，有的人认为是某一个心理的关卡，有的人则喜欢用一个线段或者线条来对比，有的人考虑从时间周期上计算，抑或其他……</p>
</li>
<li><p>看法<br>所谓的追涨杀跌，通常就是指当价格发生突破之后，顺势进场的一种交易手法。</p>
<p>根据突破来操作——在突破点进行买卖——可以，提高资金的周转率，在最短的时间将自己的利润最大化或将亏损减少到最少。</p>
<p>突破可以是对关键点位的突破，也可以是对整理形态的突破，如三角形、箱形、楔形等形态，也可以是对趋势的突破，当价格突破技术上的支撑或压力后，往往有一段跌势或涨势，而作为顺势交易者，就是希望抓住这一段明显的跌势或涨势。</p>
<p>因为，没有任何事是必然一定要发生的，所以，才有这么一种说法：突破可以是真突破也可以是假突破。</p>
</li>
</ul>
<p>以上，可看出：这个用以作为参照物的选择或者衡量具有一定的<strong>主观性</strong>，甚至，每个人对突破的判断标准各不相同。</p>
</li>
<li><p>常见场景</p>
<ul>
<li><p>突破盘整区间<br>一旦一个盘整区间形成（比如在日线上至少有1到2个月的价格横向运动），价格将会在区域的高端遇到阻力，区域的低端遇到支撑，当价格向上超过阻力或向下跌过支撑时即为突破。</p>
</li>
<li><p>突破直线<br>由基础数学可知，两点就能构成一条直线。</p>
<ul>
<li><p>趋势线<br>趋势线是技术分析的诸多方法中最常见的一种方法。（趋势线的具体用法，以后应该会再撰文另述。）</p>
<p> 趋势线的最基本形式是：在一个上升的趋势中，连接明显的支撑区域（最低点）的直线；或者在一个下降趋势中，连接明显阻力区域（最高点）的直线。</p>
<p> 当价格向上超过阻力或向下跌过趋势线时即为突破。</p>
</li>
<li><p>价格高低点相连<br>将最近的几个价格前高或前低进行相连，以此条价格连线（尤其是水平线）为参照，价格超过上方是向上突破，价格到达连线下方即为向下突破。</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p>适用条件</p>
<ul>
<li><p>时间周期<br>我们通常所说的技术分析或图表分析有个很明显的优点——它能应用在不同的时间尺度之下。就是说不过你的交易周期是什么，都能适应。</p>
<p>  对突破也是如此：无论是以一天以内的价格变化为主的当日交易，还是顺应趋势做中等期限的跟势交易，都可以采用相同的原理。</p>
</li>
<li><p>突破的有效性<br>因为每次突破后价格的运动方向并不一定与我们预期相同，所以，才需要我们设计一些“过滤器”，来帮助判断突破的有效性，但是，难免牵涉到不少主观性的成分。</p>
<ul>
<li>幅度<br>很多情况下，交易者会通过价格幅度的变化情况来排除一些可能的坏信号。比如，“3%穿越原则”便是经常见到的一种价格过滤器：收盘价格的变化要至少达到相对参照物价格幅度的3%，这样才能构成有效突破。（3%原则不适用于一些金融期货，比如国债期货。）</li>
<li><p>时间<br>除了空间外时间因素（价格突破参照物后的天数）也是一种常见的过滤器选择。</p>
<blockquote>
<p>收到信号后等待三天。       ——《期货交易技术分析》<br>最常见的为两天原则。    ——《期货市场技术分析》</p>
</blockquote>
</li>
<li><p>量仓<br>通常认为：突破时，要放量，回调时，要缩量。</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p>传统理论建议的操作节点</p>
<ul>
<li>突破的时候就进场；</li>
<li>破后等待确认有效，或者突破回调时进场。</li>
</ul>
<p><strong>忠告</strong><br>因为使用技术分析的交易者，其知识水平和经验各不相同，所以，根据同一情况作判断时，每个人的标准也都不太一样。</p>
</li>
</ol>
<p>但，<strong>关键</strong>的一点：交易者应当对突破情形尝试不同的确认条件，而<strong>不</strong>是<strong>盲目</strong>的跟随所有的突破。</p>
<h1 id="二、案例"><a href="#二、案例" class="headerlink" title="二、案例"></a>二、案例</h1><p>在2月6日的文章<a href="http://mp.weixin.qq.com/s/VbbiMmYrtow7OtPCR1v0VA" target="_blank" rel="external">一个待观察的总体市场趋势判断</a>里，我提到了饲料板块，这里就结合下玉米的近期走势来分析下：<br><img src="http://upload-images.jianshu.io/upload_images/4542536-51e8bee5f8ad7aab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>就上面这个日K线图来看，玉米05合约在本周一放量向上突破，价格在创下了半年来的新高1632后逐渐回落，而这个价格回落过程成交量减少，但是持仓量却并未同步减少，甚至还略有增加。</p>
<p>如果你做的是日线级别的交易，当前玉米的走势情况和本文上面关于突破内容的描述还是比较吻合的，那意外着只要价格在没有有效跌破昨日低点1588之前，这个向上突破可以被认为暂时成立。</p>
<p>如果您有什么问题，欢迎下方留言进行探讨~</p>
<hr>
<blockquote>
<p>既然来了，留下个喜欢再走吧，鼓励我继续创作……<br>如果喜欢我的文章，那就关注我的简书账号或简信撩我吧，我们一起做朋友~~<br>欢迎关注个人微信公众号：<a href="http://mp.weixin.qq.com/s/fefeEsv-AQeZncj0v6w7Cg" target="_blank" rel="external">海天心</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      它山之石系列，主要是对传统技术分析的一些知识进行分享。
    
    </summary>
    
      <category term="交易" scheme="http://cometrue.top/categories/%E4%BA%A4%E6%98%93/"/>
    
      <category term="它山之石" scheme="http://cometrue.top/categories/%E4%BA%A4%E6%98%93/%E5%AE%83%E5%B1%B1%E4%B9%8B%E7%9F%B3/"/>
    
    
      <category term="技术分析" scheme="http://cometrue.top/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/"/>
    
      <category term="突破" scheme="http://cometrue.top/tags/%E7%AA%81%E7%A0%B4/"/>
    
  </entry>
  
  <entry>
    <title>自建博客（六）Hexo博客的常用配置修改</title>
    <link href="http://cometrue.top/2017/02/07/%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%85%AD%EF%BC%89Hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE%E4%BF%AE%E6%94%B9/"/>
    <id>http://cometrue.top/2017/02/07/自建博客（六）Hexo博客的常用配置修改/</id>
    <published>2017-02-07T02:32:56.000Z</published>
    <updated>2017-02-12T11:57:03.996Z</updated>
    
    <content type="html"><![CDATA[<p>在<a href="http://www.jianshu.com/nb/9425223" target="_blank" rel="external">我的自建博客之路系列</a>的前面几篇文章中，我们已经一起在本地和github、coding搭建起了自己的hexo博客站点，更换了Next主题，并且绑定了自己选择的个人独立域名，但是还未发表过文章，站点的配置还是原来的默认值。在本节，我们来进行个性化的设置，按照自身需要情况将站点打造成自己的。</p>
<p>这里首先要知道在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml，它们均是用于站点配置使用的。其中，一份位于站点根目录下（比如我的：<strong>D:\hexo_config.yml</strong>），主要包含 Hexo 本身整站的配置；另一份位于主题目录（<em>D:\hexo\themes\next_config.yml</em>）下，这份配置由主题作者提供，主要用于配置主题相关的选项。为了描述方便，在以下说明中，将前者称为<strong>站点配置</strong>文件， 后者称为<em>主题配置</em>文件。下面我们先来看看<strong>站点配置</strong>文件的配置修改。</p>
<hr>
<h1 id="修改配置文件时的注意点："><a href="#修改配置文件时的注意点：" class="headerlink" title="修改配置文件时的注意点："></a><strong>修改配置文件时的注意点</strong>：</h1><ol>
<li>请使用Notepad++或者Sublime Text 2之类的程序，不要使用Windows自带的记事本。（如已忽略，产生中文乱码请修改文件编码格式为UTF-8。）<ul>
<li>本人用的是Notepad++，需要的朋友可以到此处——<a href="http://okndkdckj.bkt.clouddn.com/npp_6.9.2_Installer.exe" target="_blank" rel="external">npp_6.9.2</a>——下载。</li>
</ul>
</li>
<li>不要忽略了冒号后面的空格。</li>
</ol>
<h1 id="一、站点配置文件中可设置的功能"><a href="#一、站点配置文件中可设置的功能" class="headerlink" title="一、站点配置文件中可设置的功能"></a>一、站点配置文件中可设置的功能</h1><h2 id="1-网站"><a href="#1-网站" class="headerlink" title="1.网站"></a>1.网站</h2><table>
<thead>
<tr>
<th>参数</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>title</td>
<td style="text-align:center">网站标题</td>
</tr>
<tr>
<td>subtitle</td>
<td style="text-align:center">网站副标题</td>
</tr>
<tr>
<td>description</td>
<td style="text-align:center">网站描述</td>
</tr>
<tr>
<td>author</td>
<td style="text-align:center">您的名字</td>
</tr>
<tr>
<td>language</td>
<td style="text-align:center">网站使用的语言</td>
</tr>
<tr>
<td>timezone</td>
<td style="text-align:center">网站时区。Hexo 默认使用您电脑的时区。<a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones" target="_blank" rel="external">时区列表</a>。比如说：America/New_York,Japan, 和 UTC 。</td>
</tr>
</tbody>
</table>
<h2 id="2-网址"><a href="#2-网址" class="headerlink" title="2.网址"></a>2.网址</h2><table>
<thead>
<tr>
<th style="text-align:center">项目</th>
<th style="text-align:center">价格</th>
<th style="text-align:center">数量</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">url</td>
<td style="text-align:center">网址</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">root</td>
<td style="text-align:center">网站根目录</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">permalink</td>
<td style="text-align:center">文章的 <a href="https://hexo.io/zh-cn/docs/permalinks.html" target="_blank" rel="external">永久链接</a> 格式</td>
<td style="text-align:center">:year/:month/:day/:title/</td>
</tr>
<tr>
<td style="text-align:center">permalink_default</td>
<td style="text-align:center">永久链接中各部分的默认值</td>
</tr>
</tbody>
</table>
<h2 id="3、目录"><a href="#3、目录" class="headerlink" title="3、目录"></a>3、目录</h2><table>
<thead>
<tr>
<th style="text-align:center">参数</th>
<th style="text-align:center">描述</th>
<th style="text-align:center">默认值</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">source_dir</td>
<td style="text-align:center">资源文件夹，这个文件夹用来存放内容。</td>
<td style="text-align:center">source</td>
</tr>
<tr>
<td style="text-align:center">public_dir</td>
<td style="text-align:center">公共文件夹，这个文件夹用于存放生成的站点文件。</td>
<td style="text-align:center">public</td>
</tr>
<tr>
<td style="text-align:center">tag_dir</td>
<td style="text-align:center">标签文件夹</td>
<td style="text-align:center">tags</td>
</tr>
<tr>
<td style="text-align:center">archive_dir</td>
<td style="text-align:center">归档文件夹</td>
<td style="text-align:center">archives</td>
</tr>
<tr>
<td style="text-align:center">category_dir</td>
<td style="text-align:center">分类文件夹</td>
<td style="text-align:center">categories</td>
</tr>
<tr>
<td style="text-align:center">code_dir</td>
<td style="text-align:center">Include code 文件夹</td>
<td style="text-align:center">downloads/code</td>
</tr>
<tr>
<td style="text-align:center">i18n_dir</td>
<td style="text-align:center">国际化（i18n）文件夹</td>
<td style="text-align:center">:lang</td>
</tr>
<tr>
<td style="text-align:center">skip_render</td>
<td style="text-align:center">跳过指定文件的渲染，您可使用 <a href="https://github.com/isaacs/node-glob" target="_blank" rel="external">glob 表达式</a>来匹配路径。</td>
</tr>
</tbody>
</table>
<h2 id="4、文章"><a href="#4、文章" class="headerlink" title="4、文章"></a>4、文章</h2><table>
<thead>
<tr>
<th style="text-align:center">参数</th>
<th style="text-align:center">描述</th>
<th style="text-align:center">默认值</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">new_post_name</td>
<td style="text-align:center">新文章的文件名称</td>
<td style="text-align:center">:title.md</td>
</tr>
<tr>
<td style="text-align:center">default_layout</td>
<td style="text-align:center">预设布局</td>
<td style="text-align:center">post</td>
</tr>
<tr>
<td style="text-align:center">auto_spacing</td>
<td style="text-align:center">在中文和英文之间加入空格</td>
<td style="text-align:center">false</td>
</tr>
<tr>
<td style="text-align:center">titlecase</td>
<td style="text-align:center">把标题转换为 title case</td>
<td style="text-align:center">false</td>
</tr>
<tr>
<td style="text-align:center">external_link</td>
<td style="text-align:center">在新标签中打开链接</td>
<td style="text-align:center">true</td>
</tr>
<tr>
<td style="text-align:center">filename_case</td>
<td style="text-align:center">把文件名称转换为 (1) 小写或 (2) 大写</td>
<td style="text-align:center">0</td>
</tr>
<tr>
<td style="text-align:center">render_drafts</td>
<td style="text-align:center">显示草稿</td>
<td style="text-align:center">false</td>
</tr>
<tr>
<td style="text-align:center">post_asset_folder</td>
<td style="text-align:center">启动 <a href="https://hexo.io/zh-cn/docs/asset-folders.html" target="_blank" rel="external">Asset 文件夹</a></td>
<td style="text-align:center">false</td>
</tr>
<tr>
<td style="text-align:center">relative_link</td>
<td style="text-align:center">把链接改为与根目录的相对位址</td>
<td style="text-align:center">false</td>
</tr>
<tr>
<td style="text-align:center">future</td>
<td style="text-align:center">显示未来的文章</td>
<td style="text-align:center">true</td>
</tr>
<tr>
<td style="text-align:center">highlight</td>
<td style="text-align:center">代码块的设置</td>
</tr>
</tbody>
</table>
<h2 id="5、分类-amp-标签"><a href="#5、分类-amp-标签" class="headerlink" title="5、分类 &amp; 标签"></a>5、分类 &amp; 标签</h2><table>
<thead>
<tr>
<th style="text-align:center">参数</th>
<th style="text-align:center">描述</th>
<th style="text-align:center">默认值</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">default_category</td>
<td style="text-align:center">默认分类</td>
<td style="text-align:center">uncategorized</td>
</tr>
<tr>
<td style="text-align:center">category_map</td>
<td style="text-align:center">分类别名</td>
</tr>
<tr>
<td style="text-align:center">tag_map</td>
<td style="text-align:center">标签别名</td>
</tr>
</tbody>
</table>
<h2 id="6、日期-时间格式-日期-时间格式"><a href="#6、日期-时间格式-日期-时间格式" class="headerlink" title="6、日期-时间格式)日期 / 时间格式"></a>6、日期-时间格式)日期 / 时间格式</h2><p>Hexo 使用 <a href="http://momentjs.com/" target="_blank" rel="external">Moment.js</a> 来解析和显示时间。</p>
<table>
<thead>
<tr>
<th style="text-align:center">参数</th>
<th style="text-align:center">描述</th>
<th style="text-align:center">默认值</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">date_format</td>
<td style="text-align:center">日期格式</td>
<td style="text-align:center">YYYY-MM-DD</td>
</tr>
<tr>
<td style="text-align:center">time_format</td>
<td style="text-align:center">时间格式</td>
<td style="text-align:center">H:mm:ss</td>
</tr>
</tbody>
</table>
<h2 id="7、分页"><a href="#7、分页" class="headerlink" title="7、分页"></a>7、分页</h2><table>
<thead>
<tr>
<th style="text-align:center">参数</th>
<th style="text-align:center">描述</th>
<th style="text-align:center">默认值</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">per_page</td>
<td style="text-align:center">每页显示的文章量 (0 = 关闭分页功能)</td>
<td style="text-align:center">10</td>
</tr>
<tr>
<td style="text-align:center">pagination_dir</td>
<td style="text-align:center">分页目录</td>
<td style="text-align:center">page</td>
</tr>
</tbody>
</table>
<h2 id="8、扩展"><a href="#8、扩展" class="headerlink" title="8、扩展"></a>8、扩展</h2><table>
<thead>
<tr>
<th style="text-align:center">参数</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">theme</td>
<td style="text-align:center">当前主题名称。值为false时禁用主题</td>
</tr>
<tr>
<td style="text-align:center">deploy</td>
<td style="text-align:center">部署部分的设置</td>
</tr>
</tbody>
</table>
<h1 id="二、可能需要安装的插件"><a href="#二、可能需要安装的插件" class="headerlink" title="二、可能需要安装的插件"></a>二、可能需要安装的插件</h1><h2 id="1-添加百度-谷歌-本地-自定义站点内容搜索"><a href="#1-添加百度-谷歌-本地-自定义站点内容搜索" class="headerlink" title="1.添加百度/谷歌/本地 自定义站点内容搜索"></a>1.添加百度/谷歌/本地 自定义站点内容搜索</h2><p>在站点的根目录下执行以下命令：</p>
<pre><code>npm install hexo-generator-searchdb --save
</code></pre><h2 id="2-hexo-generator-feed-用于生成RSS订阅"><a href="#2-hexo-generator-feed-用于生成RSS订阅" class="headerlink" title="2.hexo-generator-feed 用于生成RSS订阅"></a>2.hexo-generator-feed 用于生成RSS订阅</h2><pre><code>npm install hexo-generator-feed --save
</code></pre><h2 id="3-hexo-generator-sitemap-用于生成搜索引擎网站地图"><a href="#3-hexo-generator-sitemap-用于生成搜索引擎网站地图" class="headerlink" title="3.hexo-generator-sitemap 用于生成搜索引擎网站地图"></a>3.hexo-generator-sitemap 用于生成搜索引擎网站地图</h2><pre><code>npm install hexo-generator-sitemap --save
</code></pre><h2 id="4-其他插件"><a href="#4-其他插件" class="headerlink" title="4.其他插件"></a>4.其他插件</h2><p>更多插件请移步<a href="http://hexo.io/plugins/" target="_blank" rel="external">Hexo官方插件</a>页了解</p>
<h1 id="三、我个人目前的一些相关设置"><a href="#三、我个人目前的一些相关设置" class="headerlink" title="三、我个人目前的一些相关设置"></a>三、我个人目前的一些相关设置</h1><pre><code> title: Dream Come True
 subtitle: 现实梦想
 description: The Pursuit of Happyness
 author: 海天心Y2kking
 avatar: /images/avatar.png
 email: 182036669@qq.com #你的联系邮箱
 language: zh-Hans #语言包，需要主题自带才可设置。如Jcaman自带简繁英，设置简体中文填入 zh-CN
 timezone:

 # URL #这项暂不配置，绑定域名后，欲创建sitemap.xml需要配置该项
 ## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;
 url: http://cometrue.top  #站点域名
 root: /
 permalink: :year/:month/:day/:title/  #文章永久链接格式，可添加.html后缀，如 :title.html
 permalink_defaults:

 # Directory
 source_dir: source
 public_dir: public
 tag_dir: tags
 archive_dir: archives
 category_dir: categories
 code_dir: downloads/code
 i18n_dir: :lang
 skip_render:

 # Writing
 new_post_name: :title.md # File name of new posts
 default_layout: post
 titlecase: false # Transform title into titlecase
 external_link: true # Open external links in new tab
 filename_case: 0
 render_drafts: false
 post_asset_folder: false
 relative_link: false
 future: true
 highlight:
   enable: true
   line_number: true
   auto_detect: false
   tab_replace:

 # Category &amp; Tag
 default_category: uncategorized
 category_map:
 tag_map:

 # Date / Time format
 ## Hexo uses Moment.js to parse and display date
 ## You can customize the date format as defined in
 ## http://momentjs.com/docs/#/displaying/format/
 date_format: YYYY-MM-DD
 time_format: HH:mm:ss

 # Pagination
 ## Set per_page to 0 to disable pagination
 per_page: 10
 pagination_dir: page


 # Extensions  主题选择
 ## Plugins: https://hexo.io/plugins/
 ## Themes: https://hexo.io/themes/
 theme: next  #当前主题名称

 # Deployment
 ## Docs: https://hexo.io/docs/deployment.html
 deploy:
   type: git
   repo:
       github: git@github.com:yusmile/yusmile.github.io.git,master
       coding: git@git.coding.net:yusmile/yusmile.git,master    
       message: &apos;Daily updated：{{now("YYYY-MM-DD HH:mm:ss")}} by 海天心Y2kking personal PC&apos;

 # 自己另外添加的功能
 #1.baidu_analytics
 baidu_analytics: 8759f43af3e04f8088e92ff251867945

 #2.站内搜索 Local Search  添加百度/谷歌/本地 自定义站点内容搜索。  需在站点的根目录下执行以下命令：$      npm install hexo-generator-searchdb --save
 search:
 path: search.xml
 field: post
 format: html
 limit: 10000

 #3.Feed 订阅
 feed: # 需安装插件：npm install hexo-generator-feed --save
   type: atom
   path: atom.xml
   limit: 20
   hub:    

 #4.自动生成sitemap  SEO推广,需执行以下命令，安装插件npm install hexo-generator-sitemap --save
 sitemap:
path: sitemap.xml
 baidusitemap:
     path: baidusitemap.xml  

  #5.内容分享服务
 # JiaThis 分享服务
 jiathis: true
 # 百度分享服务
 baidushare: true
 # 多说分享服务
 duoshuo_share: true
 duoshuo_hotartical: true  # 多说热评文章 true 或者 false
 duoshuo_shortname: yusmile
 # Disqus Disqus插件，如果使用的话
 #disqus_shortname:
</code></pre><h1 id="四、检查成果"><a href="#四、检查成果" class="headerlink" title="四、检查成果"></a>四、检查成果</h1><p>现在执行</p>
<pre><code>hexo clean
hexo generate
hexo server
</code></pre><p>打开<a href="http://localhost:4000/" target="_blank" rel="external">localhost:4000</a>查看效果了。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4542536-b8eacb89e94d1409.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="一切顺利   ^_^"></p>
<p><a href="https://hexo.io/zh-cn/" target="_blank" rel="external">访问HEXO官方文档</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在&lt;a href=&quot;http://www.jianshu.com/nb/9425223&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;我的自建博客之路系列&lt;/a&gt;的前面几篇文章中，我们已经一起在本地和github、coding搭建起了自己的hexo博客站点
    
    </summary>
    
      <category term="践行" scheme="http://cometrue.top/categories/%E8%B7%B5%E8%A1%8C/"/>
    
      <category term="blog" scheme="http://cometrue.top/categories/%E8%B7%B5%E8%A1%8C/blog/"/>
    
    
      <category term="blog" scheme="http://cometrue.top/tags/blog/"/>
    
      <category term="github" scheme="http://cometrue.top/tags/github/"/>
    
      <category term="coding" scheme="http://cometrue.top/tags/coding/"/>
    
      <category term="hexo" scheme="http://cometrue.top/tags/hexo/"/>
    
      <category term="next" scheme="http://cometrue.top/tags/next/"/>
    
      <category term="博客" scheme="http://cometrue.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="配置文件" scheme="http://cometrue.top/tags/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>自建博客（五）绑定个人域名，实现点击独立域名进入个人博客</title>
    <link href="http://cometrue.top/2017/02/06/%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%94%EF%BC%89%E7%BB%91%E5%AE%9A%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%EF%BC%8C%E5%AE%9E%E7%8E%B0%E7%82%B9%E5%87%BB%E7%8B%AC%E7%AB%8B%E5%9F%9F%E5%90%8D%E8%BF%9B%E5%85%A5%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://cometrue.top/2017/02/06/自建博客（五）绑定个人域名，实现点击独立域名进入个人博客/</id>
    <published>2017-02-06T09:02:18.000Z</published>
    <updated>2017-02-12T11:54:03.353Z</updated>
    
    <content type="html"><![CDATA[<p>这部分内容衔接在<a href="http://www.jianshu.com/p/99373ca5a64c" target="_blank" rel="external">自建博客系列（三）同时托管到github和coding</a>之后应该更妥。</p>
<h1 id="1-双部署的意义"><a href="#1-双部署的意义" class="headerlink" title="1.双部署的意义"></a>1.双部署的意义</h1><p>在前面<a href="http://www.jianshu.com/p/99373ca5a64c" target="_blank" rel="external">自建博客系列（三）同时托管到github和coding</a>一文中，有略微提到过为什么我要进行两个不同网站的进行双部署，其实我主要是想既然做一件事那么就尽量做好一点而已。网络上也有不少前辈这样做，甚至进行更多网站的同时部署或推送，综合下来的主要原因大概就这么几个：</p>
<ul>
<li>同时使用github和coding来做博客，一个坏了(比如被屏蔽），还有另一个。</li>
<li>加快国内访问速度，进行适当分流，github的服务器在国外，coding的服务器在香港，对于不同地区而言浏览速度有所区别。</li>
<li>为了百度搜索爬虫能抓取自己博客上的内容。</li>
<li>为了更好地支持自定义域名。</li>
</ul>
<p>当然，这完全是个人选择，你也可以只选择其中一个步骤，这样搭建个人博客将更加轻松，亦或更有DIY精神，研究更深入复杂的做法，比如不同内容推送到不同网站的不同（公有、私有）库中。</p>
<h1 id="2-在GitHub-Pages上创建CNAME文件"><a href="#2-在GitHub-Pages上创建CNAME文件" class="headerlink" title="2.在GitHub Pages上创建CNAME文件"></a>2.在GitHub Pages上创建CNAME文件</h1><ul>
<li>在站点source目录下面，新建一个名为CNAME的文件，其内容即是你要绑定的域名，比如cometrue.top</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4542536-c660d7c55870e949.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><strong>注意</strong>：CNAME文件没有后缀名！</p>
<ul>
<li>更改网站设置<blockquote>
<p>hexo clean<br>hexo g -d</p>
</blockquote>
</li>
</ul>
<h1 id="3-Coding上的设置"><a href="#3-Coding上的设置" class="headerlink" title="3.Coding上的设置"></a>3.Coding上的设置</h1><p>在网站的对应项目下进行设置，增加自定义域名<br><img src="http://upload-images.jianshu.io/upload_images/4542536-a4817b759868ac2c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>###4.将独立域名与 GitHub Pages和Coding Pages 的空间绑定</p>
<ul>
<li>关于域名解析<br>如果将域名指向一个域名，实现与被指向域名相同的访问效果，需要增加CNAME记录。</li>
<li>查询github如何配置DNS<br>GitHubPages网页右上角的<a href="https://help.github.com/articles/setting-up-an-apex-domain/" target="_blank" rel="external">Pages Help</a>中查询到关联GitHub时配置域名解析记录的IP地址（192.30.252.153或192.30.252.154）。<br><img src="http://upload-images.jianshu.io/upload_images/4542536-d438cf25290db961.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
<li><p>添加域名解析<br>到提供你自定义域名的服务商网站处，添加相应的域名解析记录即可，我是这样的：<br><img src="http://upload-images.jianshu.io/upload_images/4542536-cb89fc72804c7230.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
</li>
<li><p>验证域名与github及coding关联是否成功<br>点击<a href="http://yusmile.github.io/" target="_blank" rel="external">yusmile.github.io</a>、<a href="http://yusmile.coding.me/" target="_blank" rel="external">yusmile.coding.me</a>和访问<a href="http://cometrue.top/">cometrue.top</a>访问效果一致。</p>
</li>
</ul>
<p>这样，我们就已经绑定个人域名，搞定域名解析，是不是觉得特别有成就感啊 ：）</p>
<p>官方参考：<br>1、<a href="https://help.github.com/articles/setting-up-an-apex-domain/" target="_blank" rel="external">GitHubPages Help</a><br>2、<a href="https://coding.net/help/doc/pages/index.html#section" target="_blank" rel="external">Coding Pages 介绍</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这部分内容衔接在&lt;a href=&quot;http://www.jianshu.com/p/99373ca5a64c&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;自建博客系列（三）同时托管到github和coding&lt;/a&gt;之后应该更妥。&lt;/p&gt;
&lt;h1 id=
    
    </summary>
    
      <category term="践行" scheme="http://cometrue.top/categories/%E8%B7%B5%E8%A1%8C/"/>
    
      <category term="blog" scheme="http://cometrue.top/categories/%E8%B7%B5%E8%A1%8C/blog/"/>
    
    
      <category term="blog" scheme="http://cometrue.top/tags/blog/"/>
    
      <category term="github" scheme="http://cometrue.top/tags/github/"/>
    
      <category term="coding" scheme="http://cometrue.top/tags/coding/"/>
    
      <category term="hexo" scheme="http://cometrue.top/tags/hexo/"/>
    
      <category term="next" scheme="http://cometrue.top/tags/next/"/>
    
      <category term="博客" scheme="http://cometrue.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="域名" scheme="http://cometrue.top/tags/%E5%9F%9F%E5%90%8D/"/>
    
      <category term="cname" scheme="http://cometrue.top/tags/cname/"/>
    
  </entry>
  
  <entry>
    <title>自建博客（四）HEXO博客的常识+更换NEXT主题</title>
    <link href="http://cometrue.top/2017/02/05/%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%9B%9B%EF%BC%89HEXO%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%B8%B8%E8%AF%86+%E6%9B%B4%E6%8D%A2NEXT%E4%B8%BB%E9%A2%98/"/>
    <id>http://cometrue.top/2017/02/05/自建博客（四）HEXO博客的常识+更换NEXT主题/</id>
    <published>2017-02-04T16:02:58.000Z</published>
    <updated>2017-02-12T12:55:10.731Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、Hexo博客的一些常识"><a href="#一、Hexo博客的一些常识" class="headerlink" title="一、Hexo博客的一些常识"></a>一、Hexo博客的一些常识</h1><p>这部分应该可以接在<a href="http://www.jianshu.com/p/718902b05e91" target="_blank" rel="external">自建博客系列（一）在Windows平台下进行博客平台搭建</a>之后。</p>
<h2 id="1-结构"><a href="#1-结构" class="headerlink" title="1.结构"></a>1.结构</h2><p>安装并初始化Hexo成功后，指定文件夹（比如我的安装路径是D:\hexo）的目录如下：</p>
<blockquote>
<p>├── _config.yml<br>├── package.json<br>├── scaffolds<br>├── source<br>  |   └── _posts<br>└── themes</p>
</blockquote>
<p>其中<br>config.yml文件用于存放网站的配置信息，你可以在此配置大部分的参数；<br>package.json是应用程序数据，指明hexo的版本等信息，类似于一般软件中的关于按钮；<br>scaffolds是存放模板的文件夹，当新建文章时，Hexo 会根据scaffold来建立文件；<br>source是资源文件夹，用于存放用户资源<em> （除 <em>posts 文件夹之外，开头命名为 </em> (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去）</em> ；<br>themes是主题文件夹，存放博客主题；  Hexo 会根据主题来生成静态页面。</p>
<h2 id="2-常用命令"><a href="#2-常用命令" class="headerlink" title="2.常用命令"></a>2.常用命令</h2><ul>
<li>Hexo的命令极简单，安装后只需要记住四个常用的基础命令即可。执行命令需要Git当前处于blog文件夹根目录（比如我的安装路径是D:\hexo）下。</li>
</ul>
<blockquote>
<p>hexo g  #generate 生成静态文件<br>hexo s #server 启动服务器。默认情况下，访问网址为： <a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a><br>hexo d #deploy 部署网站。部署网站前，需要预先生成静态文件<br>hexo clean #clean 清除缓存文件 (db.json) 和已生成的静态文件 (public)。</p>
</blockquote>
<ul>
<li><p><strong>最核心的写作相关</strong><br>博客嘛，最核心的功能还是要有博文，在这内容为王的时代，写文章还是相当重要的！</p>
<ul>
<li><p>写文章<br>你可以执行下列命令来创建一篇新文章。</p>
<blockquote>
<p>hexo new [layout] <title> #新建文章</title></p>
</blockquote>
<p>您可以在命令中指定文章的布局（layout），默认为 post，可以通过修改 _config.yml 中的 default_layout 参数来指定默认布局(在后文的配置中会提到具体修改参数），这样所有的文章都会以md形式保存在（D:\hexo目录下）source文件夹的_post文件夹中，只要在_post文件夹中新建md类型的文档，就能在执行hexo g的时候被渲染。 </p>
</li>
<li>删除文章<br>删除那篇文章，然后重新运行<blockquote>
<p>hexo clean<br>hexo g -d</p>
</blockquote>
</li>
</ul>
</li>
</ul>
<blockquote>
<p>后面<a href="http://www.jianshu.com/p/6584a04ccadd" target="_blank" rel="external">自建博客系列（八）再次具体实践下怎么撰文和发表</a>还有更详细的内容。</p>
</blockquote>
<ul>
<li><p>其他</p>
<ul>
<li><p>卸载Hexo：</p>
<blockquote>
<p>npm uninstall hexo-cli -g</p>
</blockquote>
</li>
<li><p>安装旧版本Hexo<br>先卸载当前版本，以2.8.3为例，执行npm install hexo@2.8.3 -g，再初始化并安装依赖和插件。</p>
</li>
</ul>
</li>
</ul>
<h1 id="二、更换NEXT主题"><a href="#二、更换NEXT主题" class="headerlink" title="二、更换NEXT主题"></a>二、更换NEXT主题</h1><p>Hexo主题非常多，可以参考丰富多彩的<a href="https://hexo.io/themes/" target="_blank" rel="external">Hexo官方主题</a>，本文选Next为主题本人之所以使用Hexo搭建个人博客，很大一个原因就是发现其下的NEXT主题很多功能都符合我心中所想。</p>
<h2 id="1-下载主题"><a href="#1-下载主题" class="headerlink" title="1.下载主题"></a>1.下载主题</h2><p>blog文件夹根目录（比如我的安装路径是D:\hexo）下，执行</p>
<blockquote>
<p>git clone <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">https://github.com/iissnan/hexo-theme-next</a> themes/next #下载NexT主题</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/4542536-88aff9a3f28d9a73.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="2-启用主题"><a href="#2-启用主题" class="headerlink" title="2.启用主题"></a>2.启用主题</h2><p>打开站点根（D:\hexo）目录下的_config.yml文件， 找到 theme 字段，并将其值更改为 next。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4542536-90ee77a7e170449f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="3-验证主题"><a href="#3-验证主题" class="headerlink" title="3.验证主题"></a>3.验证主题</h2><ul>
<li>在切换主题之后、验证之前， 我们最好清除下 Hexo 的缓存。<blockquote>
<p>hexo clean</p>
</blockquote>
</li>
<li>启动 Hexo 本地站点，并开启调试模式（即加上 –debug）<blockquote>
<p>hexo g<br>hexo s –debug</p>
</blockquote>
</li>
</ul>
<p>在服务启动的过程，注意观察命令行输出是否有任何异常信息，如果你碰到问题，这些信息将帮助他人更好的定位错误。 当命令行输出中提示出：Press Ctrl+C to stop.此时即可使用浏览器访问 <a href="http://localhost:4000，" target="_blank" rel="external">http://localhost:4000，</a>  检查站点是否正确运行。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4542536-4db1c15212569f2a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<hr>
<p>P.S.<br>作为一个新手和技术小白，我发现写一篇这样的文章真是比想象中困难得多的多……!</p>
<p>此文是从2月4日早上便开始尝试，一直折腾到现在，结果还没把我想要的全部整完。那博客配置的修改和域名绑定等内容只能留待明天了，夜深了，也该洗洗睡了，各位晚安~</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、Hexo博客的一些常识&quot;&gt;&lt;a href=&quot;#一、Hexo博客的一些常识&quot; class=&quot;headerlink&quot; title=&quot;一、Hexo博客的一些常识&quot;&gt;&lt;/a&gt;一、Hexo博客的一些常识&lt;/h1&gt;&lt;p&gt;这部分应该可以接在&lt;a href=&quot;http://w
    
    </summary>
    
      <category term="践行" scheme="http://cometrue.top/categories/%E8%B7%B5%E8%A1%8C/"/>
    
      <category term="blog" scheme="http://cometrue.top/categories/%E8%B7%B5%E8%A1%8C/blog/"/>
    
    
      <category term="blog" scheme="http://cometrue.top/tags/blog/"/>
    
      <category term="github" scheme="http://cometrue.top/tags/github/"/>
    
      <category term="coding" scheme="http://cometrue.top/tags/coding/"/>
    
      <category term="hexo" scheme="http://cometrue.top/tags/hexo/"/>
    
      <category term="next" scheme="http://cometrue.top/tags/next/"/>
    
      <category term="博客" scheme="http://cometrue.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="更换主题" scheme="http://cometrue.top/tags/%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>自建博客（三）同时托管到github和coding</title>
    <link href="http://cometrue.top/2017/02/03/%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89%E5%90%8C%E6%97%B6%E6%89%98%E7%AE%A1%E5%88%B0github%E5%92%8Ccoding/"/>
    <id>http://cometrue.top/2017/02/03/自建博客（三）同时托管到github和coding/</id>
    <published>2017-02-03T15:08:58.000Z</published>
    <updated>2017-02-12T11:51:10.168Z</updated>
    
    <content type="html"><![CDATA[<p>在<a href="http://www.jianshu.com/p/718902b05e91" target="_blank" rel="external">自建博客系列（一）在Windows平台下进行博客平台搭建</a>一文中，我们已经顺利搭建成功博客环境，并在本地看见了效果，那么今天要实现的就是将本地内容搬到网上<a id="more"></a><del>，并结合<a href="http://www.jianshu.com/p/04535752f926" target="_blank" rel="external">自建博客系列（二）关于域名（购买或免费多种选择）</a>中的内容，捆绑上我们自己的域名。<em>（因为在践行的过程中出现了比想象中多得多的出错提示，所以这后半部分等待后面继续来实践）</em></del></p>
<hr>
<p><em>参考了一些网上的教程，考虑到：加快国内访问速度、为了百度搜索爬虫能抓取自己博客上的内容，拟把博客同时部署在Github Pages和Coding(之前的GitCafe)上。</em></p>
<h1 id="一、部署到github前的准备"><a href="#一、部署到github前的准备" class="headerlink" title="一、部署到github前的准备"></a>一、部署到github前的准备</h1><h2 id="1、注册GitHub"><a href="#1、注册GitHub" class="headerlink" title="1、注册GitHub"></a>1、注册GitHub</h2><ul>
<li>打开<a href="https://github.com/" target="_blank" rel="external">GitHub官网</a></li>
<li>填写注册信息进行注册操作：没有登录的用户打开网站首页就会显示注册的操作（如图所示），或者是点击Sign up按钮进入注册详情页，<strong>注册你的username和邮箱，邮箱十分重要，GitHub上很多通知都是通过邮箱的。</strong>注册过程比较简单,在此我不再啰嗦。<br><img src="http://upload-images.jianshu.io/upload_images/4542536-0604d6689327cb5e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
<li>填写注册信息：点击Sign up for GitHub(注册)按钮后，接下来是选择协议部分。根据自己的情况选择相关的协议，一般人选的都是免费的那一项。<h2 id="2、创建仓库"><a href="#2、创建仓库" class="headerlink" title="2、创建仓库"></a>2、创建仓库</h2></li>
<li>登录github账号：在github首页点击Sign in按钮进入登录页面。填写用户名或邮箱和密码，点击Sign in按钮登录。<img src="http://upload-images.jianshu.io/upload_images/4542536-db0339f9c2756f94.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
<li>点击创建仓库：点击在登录的用户图像左边的+号和下三角符号按钮。<br><img src="http://upload-images.jianshu.io/upload_images/4542536-353cefb59f9a96c4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
<li>填写创建仓库信息：<br>仓库名称必须是用户名.github.io（别问我为什么，人家就是这样规定的），比如我的Github用户名为yusmile，那么我创建的repository的名字应该是yusmile.github.io。<br><img src="http://upload-images.jianshu.io/upload_images/4542536-c836b98ca729c036.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>*填好相关信息后点击Create repository(创建仓库)按钮。<h2 id="3、配置SSH"><a href="#3、配置SSH" class="headerlink" title="3、配置SSH"></a>3、配置SSH</h2></li>
<li>在Git Bash输入以下指令（任意位置点击鼠标右键），检查是否已经存在了SSH keys。<blockquote>
<p>ls -al ~/.ssh</p>
</blockquote>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4542536-9fe4c7904f9dd550.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<ul>
<li>如果存在的话(如上图），直接删除.ssh文件夹里面所有文件<br><img src="http://upload-images.jianshu.io/upload_images/4542536-e25308c0b6d00844.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
<li>如果不存在就没有关系，生成新的SSH Key：<blockquote>
<p>$ ssh-keygen -t rsa -C “邮件地址@youremail.com”<br>Generating public/private rsa key pair.<br>Enter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa):&lt;回车就好&gt;</p>
</blockquote>
</li>
</ul>
<p><strong>注意</strong>1.此处的邮箱地址，你可以输入自己的邮箱地址；2.此处的「-C」的是大写的「C」<br>然后系统会要你输入密码：</p>
<blockquote>
<p>Enter passphrase (empty for no passphrase):&lt;输入加密串&gt;<br>Enter same passphrase again:&lt;再次输入加密串&gt;</p>
</blockquote>
<p>在回车中会提示你输入一个密码（如下图，我没有输入直接回车，如果你输入的话，要记得，到时候会用到），这个密码会在你提交项目时使用，如果为空的话提交项目时则不用输入。这个设置是防止别人往你的项目里提交内容。<br><strong>注意</strong>：输入密码的时候没有*字样的，你直接输入就可以了。<br><img src="http://upload-images.jianshu.io/upload_images/4542536-bf62b933c1eb9f83.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>注：id_rsa文件是私钥，要妥善保管，id_rsa.pub是公钥文件。</p>
<h2 id="4、添加公钥到github"><a href="#4、添加公钥到github" class="headerlink" title="4、添加公钥到github"></a>4、添加公钥到github</h2><ul>
<li>打开本地 <em>C:\Users\Administrator.ssh\id_rsa.pub或 C:\Users\admin.ssh\id_rsa.pub</em>此文件里面内容为刚才生成的密钥。如果看不到这个文件，你需要设置显示隐藏文件。准确的复制这个文件的内容，才能保证设置的成功。</li>
<li>登陆github系统，点击右上角的 Settings—&gt;(屏幕左边）SSH and GPG keys —&gt; New SSH key （屏幕右上角）—&gt; 把你本地生成的密钥复制到里面（key文本框中）， 点击 Add SSH key 就ok了<br><img src="http://upload-images.jianshu.io/upload_images/4542536-363c831459eefabf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><h2 id="5、测试"><a href="#5、测试" class="headerlink" title="5、测试"></a>5、测试</h2>可以输入下面的命令，看看设置是否成功，git@github.com的部分不要修改：<blockquote>
<p>ssh -T git@github.com</p>
</blockquote>
</li>
</ul>
<p>如果是下面的反馈：<br><img src="http://upload-images.jianshu.io/upload_images/4542536-9098e8913fa59721.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>不要紧张，输入yes就好，然后会看到：<br><img src="http://upload-images.jianshu.io/upload_images/4542536-9da60e84ef21c769.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h3 id="6、设置用户信息"><a href="#6、设置用户信息" class="headerlink" title="6、设置用户信息"></a>6、设置用户信息</h3><p>现在你已经可以通过 SSH 链接到 GitHub 了，还有一些个人信息需要完善的。<br>Git 会根据用户的名字和邮箱来记录提交。GitHub 也是用这些信息来做权限的处理，输入下面的代码进行个人信息的设置，把名称和邮箱替换成你自己的，名字必须是你的真名，而不是GitHub的昵称。</p>
<blockquote>
<p>git config –global user.name “yusmile”//用户名<br>git config –global user.email “182036669@qq.com”//填写自己的邮箱</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/4542536-f4f578886b00b0b2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h1 id="二、部署到Coding-net前的准备"><a href="#二、部署到Coding-net前的准备" class="headerlink" title="二、部署到Coding.net前的准备"></a>二、部署到Coding.net前的准备</h1><h2 id="1、注册"><a href="#1、注册" class="headerlink" title="1、注册"></a>1、注册</h2><p>打开<a href="https://coding.net/" target="_blank" rel="external">Coding.net</a>注册，我注册使用的邮箱和用户名同<a href="https://github.com/" target="_blank" rel="external">GitHub</a>一致。</p>
<h2 id="2、添加SSH公钥"><a href="#2、添加SSH公钥" class="headerlink" title="2、添加SSH公钥"></a>2、添加SSH公钥</h2><p>此前已经在Github上创建了SSH公钥，直接用Github的SSH公钥就可以部署到Coding上了，本地打开前面的id_rsa.pub文件，复制里面的所有内容填写到公钥内容中，公钥名称可以随意起名，添加就可以了。<img src="http://upload-images.jianshu.io/upload_images/4542536-4b9868b44ee9ba0e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="3、测试公钥"><a href="#3、测试公钥" class="headerlink" title="3、测试公钥"></a>3、测试公钥</h2><p>打开Git Base Here  输入命令</p>
<blockquote>
<p>ssh -T git@git.coding.net</p>
</blockquote>
<p>如果返回如下提示，就表示公钥添加成功了<br>Coding.net Tips : [Hello ! You’ve conected to Coding.net by SSH successfully! ]</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4542536-75d1aa10ad507c57.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<blockquote>
<p>也有些前辈是看到下图提示后输入：yes<br><img src="http://upload-images.jianshu.io/upload_images/4542536-c280bdbb81877b44.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>返回：<br><img src="http://upload-images.jianshu.io/upload_images/4542536-6a3ab4e51ecc9050.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>表示连接成功。</p>
</blockquote>
<h2 id="4、创建项目"><a href="#4、创建项目" class="headerlink" title="4、创建项目"></a>4、创建项目</h2><ul>
<li>同GITHUB差不多，创建一个项目<br><img src="http://upload-images.jianshu.io/upload_images/4542536-3954192b2876c589.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
<li>打开Pages服务</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4542536-f91687d102eb12ba.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="">选择后点击“保存”即可。</p>
<h1 id="三、同时部署到github和coding"><a href="#三、同时部署到github和coding" class="headerlink" title="三、同时部署到github和coding"></a>三、同时部署到github和coding</h1><h2 id="1、-config-yml配置"><a href="#1、-config-yml配置" class="headerlink" title="1、_config.yml配置"></a>1、_config.yml配置</h2><p>想要同时部署到2个平台，就要修改博客根目录下面的_config.yml文件中的deploy如下<br>根据<a href="https://hexo.io/zh-cn/docs/deployment.html" target="_blank" rel="external">官网</a>上给出的多部署配置方式需要修改成下面的形式：</p>
<blockquote>
<p>deploy:<br>  type: git<br>  repo:<br>  type: heroku<br>  repo:</p>
</blockquote>
<p>我是这样修改的：<br><img src="http://upload-images.jianshu.io/upload_images/4542536-8d97c6950b70772c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="2、安装插件"><a href="#2、安装插件" class="headerlink" title="2、安装插件"></a>2、安装插件</h2><blockquote>
<p>npm install hexo-deployer-git –save</p>
</blockquote>
<h2 id="3、设置完成后，在hexo目录下执行hexo-d即可同时部署。"><a href="#3、设置完成后，在hexo目录下执行hexo-d即可同时部署。" class="headerlink" title="3、设置完成后，在hexo目录下执行hexo d即可同时部署。"></a>3、设置完成后，在hexo目录下执行hexo d即可同时部署。</h2><hr>
<p><strong><em> 报错</em></strong></p>
<ul>
<li>提示：<br><img src="http://upload-images.jianshu.io/upload_images/4542536-159cec067234c904.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><ul>
<li>对策：<br>删除你hexo 下面的.deploy_git文件夹，然后分别输入下面4条命令 <blockquote>
<p>git config –global core.autocrlf false<br>hexo clean<br>hexo g<br>hexo d</p>
</blockquote>
</li>
</ul>
</li>
</ul>
<hr>
<h2 id="4、测试"><a href="#4、测试" class="headerlink" title="4、测试"></a>4、测试</h2><p>部署完成后，浏览器打开以下地址<br>GitHub:<a href="http://username.github.io" target="_blank" rel="external">http://username.github.io</a><br>Coding:<a href="http://username.coding.me" target="_blank" rel="external">http://username.coding.me</a><br>出现以下结果：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4542536-95c4186f704cc4c6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="终于成功了"></p>
<hr>
<p>本文到此先告一段落。</p>
<p>看似简单的一篇，我其实折腾了不止3天，其中有很多错误，谢谢网络上的各位前辈提供资源和回答让我有了目前这个结果！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在&lt;a href=&quot;http://www.jianshu.com/p/718902b05e91&quot;&gt;自建博客系列（一）在Windows平台下进行博客平台搭建&lt;/a&gt;一文中，我们已经顺利搭建成功博客环境，并在本地看见了效果，那么今天要实现的就是将本地内容搬到网上
    
    </summary>
    
      <category term="践行" scheme="http://cometrue.top/categories/%E8%B7%B5%E8%A1%8C/"/>
    
      <category term="blog" scheme="http://cometrue.top/categories/%E8%B7%B5%E8%A1%8C/blog/"/>
    
    
      <category term="blog" scheme="http://cometrue.top/tags/blog/"/>
    
      <category term="github" scheme="http://cometrue.top/tags/github/"/>
    
      <category term="coding" scheme="http://cometrue.top/tags/coding/"/>
    
      <category term="hexo" scheme="http://cometrue.top/tags/hexo/"/>
    
      <category term="next" scheme="http://cometrue.top/tags/next/"/>
    
      <category term="博客" scheme="http://cometrue.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="同时托管2" scheme="http://cometrue.top/tags/%E5%90%8C%E6%97%B6%E6%89%98%E7%AE%A12/"/>
    
  </entry>
  
  <entry>
    <title>自建博客（二）关于域名（购买或免费多种选择）</title>
    <link href="http://cometrue.top/2017/02/02/%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89%E5%85%B3%E4%BA%8E%E5%9F%9F%E5%90%8D%EF%BC%88%E8%B4%AD%E4%B9%B0%E6%88%96%E5%85%8D%E8%B4%B9%E5%A4%9A%E7%A7%8D%E9%80%89%E6%8B%A9%EF%BC%89/"/>
    <id>http://cometrue.top/2017/02/02/自建博客（二）关于域名（购买或免费多种选择）/</id>
    <published>2017-02-02T07:24:58.000Z</published>
    <updated>2017-02-12T11:47:56.542Z</updated>
    
    <content type="html"><![CDATA[<p>为何要自建博客，而不是单纯选择新浪、云笔记上写文章|做记录，在昨天的文章<a href="http://www.jianshu.com/p/718902b05e91" target="_blank" rel="external">（一）在Windows平台下进行博客平台搭建</a>中提到过一个原因——“独立的才是自己的”，竟然要独立，那么必然首先要有个专属于你自己的独立域名。</p>
<hr>
<h1 id="一、关于域名"><a href="#一、关于域名" class="headerlink" title="一、关于域名"></a>一、关于域名</h1><h2 id="1、什么是域名"><a href="#1、什么是域名" class="headerlink" title="1、什么是域名"></a>1、什么是域名</h2><p>百度百科上是这么说的：</p>
<blockquote>
<p><a href="http://baike.baidu.com/view/43.htm" target="_blank" rel="external">域名</a>（<a href="http://baike.baidu.com/view/105602.htm" target="_blank" rel="external">Domain Name</a>），是由一串用点分隔的名字组成的Internet上某一台计算机或计算机组的名称，用于在数据传输时标识计算机的电子方位（有时也指地理位置，地理上的域名，指代有行政自主权的一个地方区域）。域名是一个IP地址上有“面具” 。一个域名的目的是便于记忆和沟通的一组服务器的地址（网站，电子邮件，<a href="http://baike.baidu.com/subview/369/6149695.htm" target="_blank" rel="external">FTP</a>等）。</p>
</blockquote>
<p>IP地址是Internet主机的作为路由寻址用的数字型标识，人不容易记忆。因而产生了域名（domain name）这一种字符型标识。</p>
<h2 id="2、域名结构"><a href="#2、域名结构" class="headerlink" title="2、域名结构"></a>2、域名结构</h2><p>一个域名通常由主域名体和后缀组成。</p>
<blockquote>
<p>由两个或两个以上的词构成，中间由点号分隔开。最右边的那个词称为<a href="http://baike.baidu.com/view/119298.htm" target="_blank" rel="external">顶级域名</a>。下面是几个常见的顶级域名及其用法：<br>.COM–用于商业机构。它是最常见的顶级域名。任何人都可以注册.COM 形式的域名。<br>.TOP–用于所有公司组织个人，顶级高端，事业突破。任何人都可以注册.TOP形式的域名。<br>.NET–最初是用于<a href="http://baike.baidu.com/view/4412148.htm" target="_blank" rel="external">网络组织</a>，例如因特网服务商和维修商。任何人都可以注册以.NET结尾的域名。<br>.ORG–是为各种组织包括非盈利组织而定的，任何人都可以注册以.ORG 结尾的域名。<br>国家代码由两个字母组成的顶级域名如.cn,.uk,.de和.jp称为国家代码顶级域名（ccTLDs),其中.cn是中国专用的顶级域名，其注册归CNNIC管理，以.cn结尾的二级域名我们简称为国内域名。注册国家代码顶级域名下的二级域名的规则和政策与不同的国家的政策有关。您在注册时应咨询域名注册机构，问清相关的注册条件及与注册相关的条款。某些域名注册商除了提供以.com,.net和.org结尾的域名的注册服务之外，还提供国家代码顶级域名的注册。ICANN并没有特别授权注册商提供国家代码顶级域名的注册服务。</p>
</blockquote>
<h2 id="3、域名类型和级别"><a href="#3、域名类型和级别" class="headerlink" title="3、域名类型和级别"></a>3、域名类型和级别</h2><ul>
<li>国际域名<br>也叫国际顶级域名（international top-level domain-names，简称iTDs）。这也是使用最早也最广泛的域名。例如表示工商企业的 .com.top，表示网络提供商的.net，表示非盈利组织的.org等。</li>
<li>国内域名<br>国内注册的域名（也叫<a href="http://baike.baidu.com/view/657942.htm" target="_blank" rel="external">国家域名</a>)，按照我们通常的习惯是指中国国内域名，域名以.cn结尾。此类域名由”中国互联网络管理中心”(CNNIC)发放册登记。例如：.gov、.cn、.edu.cn、.com.cn、等。<br>国内域名又称为国内顶级域名（national top-level domainnames，简称nTLDs），即按照国家的不同分配不同后缀，这些域名即为该国的国内顶级域名。200多个国家和地区都按照ISO3166国家代码分配了顶级域名，例如中国是cn，美国是us，日本是jp等。</li>
<li>顶级域名<br>顶级域名又分为两类：<br>一是国家顶级域名（national top-level domainnames，简称nTLDs），200多个国家都按照ISO3166国家代码分配了顶级域名，例如中国是cn，美国是us，日本是jp等；<br>二是国际顶级域名（international top-level domain names，简称iTDs），例如表示工商企业的 .Com .Top，表示网络提供商的.net，表示非盈利组织的.org等。大多数域名争议都发生在com的顶级域名下，因为多数公司上网的目的都是为了赢利。为加强域名管理，解决域名资源的紧张，Internet协会、Internet分址机构及世界知识产权组织（WIPO）等国际组织经过广泛协商， 在原来三个国际通用顶级域名：（com）的基础上，新增加了7个国际通用顶级域名：firm（公司企业）、store（销售公司或企业）、Web（突出WWW活动的单位）、arts（突出文化、娱乐活动的单位）、rec (突出消遣、娱乐活动的单位）、info(提供信息服务的单位）、nom(个人），并在世界范围内选择新的注册机构来受理域名注册申请。</li>
<li>二级域名<br>是指顶级域名之下的域名，在国际顶级域名下，它是指域名注册人的网上名称，例如 ibm，yahoo，microsoft等；在国家顶级域名下，它是表示注册企业类别的符号，例如com，.top，edu，gov，net等。<br>中国在国际互联<a href="http://baike.baidu.com/view/544340.htm" target="_blank" rel="external">网络信息中心</a>（Inter NIC） 正式注册并运行的顶级域名是CN，这也是中国的一级域名。在顶级域名之下，中国的二级域名又分为类别域名和行政区域名两类。类别域名共7个， 包括用于科研机构的ac；用于工商金融企业的com、top；用于教育机构的edu；用于政府部门的 gov；用于互联网络信息中心和运行中心的net；用于非盈利组织的org。而行政区域名有34个，分别对应于中国各省、自治区和直辖市。</li>
<li>三级域名<br>用字母（ A～Z，a～z，大小写等）、数字（0～9）和连接符（－）组成， 各级域名之间用实点（.）连接，三级域名的长度不能超过20个字符。如无特殊原因，建议采用申请人的英文名（或者缩写）或者汉语拼音名 （或者缩写） 作为三级域名，以保持域名的清晰性和简洁性。</li>
</ul>
<h2 id="4、域名选择"><a href="#4、域名选择" class="headerlink" title="4、域名选择"></a>4、域名选择</h2><ul>
<li>因为独立域名是指国际国内顶级域名，那么既然要做独立的个人博客，我当然倾向与拥有自己的独立域名，个人认为主要有以下优点：<ul>
<li>独立域名一经注册，所有权完全是属于你自己的，你自己有完全的管理权限，不受制于别人。</li>
<li>一个好的域名容易搜索、查找和记忆。独立域名含有你的公司的名称或商号，很容易被用户在搜索引擎中找到，甚至猜到。</li>
<li>域名具有独立性，你可以根据实际情况，把自己的独立域名解释到任何一个虚拟主机提供商处，但如果你用的是免费的域名，你就不能了，只好重新重新向搜索引擎提交网页，通知友好链接站点你新的域名地址。这样，就得不偿失。</li>
<li>独立域名短，方便输入。独立域名一般比免费的域名短，很容易输入到地址栏，也能方便地加到你的QQ签名，邮件签名、文件、名片及信件中。</li>
<li>有独立域名，企业可信度更高。正规的商家往往都有他们自己的独立域名，对于那些使用二级域名、存放网站在免费空间的公司或企业，往往都给人实力不强的一种印象。</li>
<li>注册人具有完全的所有权。一旦域名注册成功，只要按时续费，域名不会被别人抢注。</li>
<li>从长期看，更有利于个人品牌形象的塑造。</li>
</ul>
</li>
<li>当然你也可以选择二级域名，毕竟二级域名有个比较大的的优点：免费。你如果对这方面内容感兴趣，可以自己动动手指进行搜索，目前国内也得不少免费二级域名资源可以提供注册。</li>
<li>取名<ul>
<li>后缀<br><a href="http://baike.baidu.com/view/119298.htm" target="_blank" rel="external">百度</a>上有个帖子，里面列举了众多顶级域名的注解。<br>我个人选择.top，因为下面这个图片触动了我内心深处：<br><img src="http://upload-images.jianshu.io/upload_images/4542536-632b8a9b5a7f5f90.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
<li><a href="cometrue.top">cometrue.top</a><br>传统意义上说注册一个自己的域名就和自己重新取个名字一样，最后该域名能够：朗朗上口、不要有歧义、在百度上容易SEO（例如，您可以搜索易仁永澄，看一下）、有内涵、有Bigger等。<br>个人很喜欢“肖申克的救赎”这部电影。既然有梦想，我们应该努力去践行，让梦想变成现实——<a href="cometrue.top">cometrue.top</a>！</li>
</ul>
</li>
</ul>
<h1 id="二、践行"><a href="#二、践行" class="headerlink" title="二、践行"></a>二、践行</h1><h2 id="1、其他"><a href="#1、其他" class="headerlink" title="1、其他"></a>1、其他</h2><p>我本来的写在后面主要是为了有做广告之嫌。</p>
<ul>
<li>购买<br>目前在网上购买域名是比较容易的，选择也比较多的，比如国外的：<a href="https://www.godaddy.com/" target="_blank" rel="external">godaddy</a>、<a href="http://name.com/" target="_blank" rel="external">Name</a>等；国内的：或<a href="http://www.xinnet.com/" target="_blank" rel="external">新网</a>、<a href="http://www.xinnet.com/" target="_blank" rel="external">万网</a>、<a href="http://www.iisp.com/" target="_blank" rel="external">耐思尼克</a>……<br>p.s.<a href="https://www.qcloud.com/act/campus" target="_blank" rel="external">腾讯云</a>上好像有个“1元=服务器+域名”优惠，如果你是学生可以试试。</li>
<li>免费<br>除了免费的二级域名外，其实网络上也有一些顶级域名的免费资源，如感兴趣可以参考<a href="http://jingyan.baidu.com/article/0eb457e52987b203f0a90541.html" target="_blank" rel="external">【顶级免费域名】Freenom免费注册域名</a>。<br>也有一些特殊的做法如感兴趣可以参考<a href="http://www.jianshu.com/p/0bcf2635794e" target="_blank" rel="external">利用7牛云搭建hexo个人博客</a>。<br>当然，你既然已经同意<a href="http://www.jianshu.com/p/718902b05e91" target="_blank" rel="external">（一）在Windows平台下进行博客平台搭建</a>的观点，并且选择GITHUB的仓库来存放个人博客，那么<strong>最不折腾的办法就是：利用它提供的.github.io免费二级域名</strong>。<h2 id="2、以我自身为例，手把手教你进行域名注册"><a href="#2、以我自身为例，手把手教你进行域名注册" class="headerlink" title="2、以我自身为例，手把手教你进行域名注册"></a>2、以我自身为例，手把手教你进行域名注册</h2>个人是在<a href="http://www.west.cn/domains/top.asp" target="_blank" rel="external">西部数码</a>注册的。为了此文，我将再次将记忆从历史中抓出：</li>
<li>确认是否可注册<br>先在<a href="http://www.west.cn/services/domain/" target="_blank" rel="external">查域名</a>处确认喜欢的域名是否可以注册。<br><img src="http://upload-images.jianshu.io/upload_images/4542536-7ab4994772ccf070.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="">这里要知道，不是自己想要的域名就会有，很多域名都已经被抢注了。如果找到中意的域名，就赶紧注册了吧，这里有几个提示：<ul>
<li>在选择域名的时候一定要谨慎！可以像新生儿取名一样找信赖的人讨论下，当然，如果您愿意的话，也可以在您定下一个域名前来找我商量下；</li>
<li>如果在注册国内网站服务时，记得务必要填写真实信息，方便未来备案问题的解决；</li>
<li>如果选择了特别昂贵的域名，建议去不同网站上搜索对吧下，可能有更便宜的，并且在使用上没有什么区别的。</li>
</ul>
</li>
<li>网站<br>你可以在在<a href="http://www.west.cn/" target="_blank" rel="external">西部数码</a>网页的右上角点击注册<br><img src="http://upload-images.jianshu.io/upload_images/4542536-420c121e9f8b6ec2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="新用户   创建账号"><br>其中红色带星号的部分是必填内容：<br><img src="http://upload-images.jianshu.io/upload_images/4542536-dbd7358157f95370.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><img src="http://upload-images.jianshu.io/upload_images/4542536-8051653fa5c4970b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="其中红色带星号的部分是必填内容"></li>
</ul>
<hr>
<p><img src="http://upload-images.jianshu.io/upload_images/4542536-c9890fcb44a0d3f9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="">如果价格可以接受，那么结合优惠券买单结算即可。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4542536-20bddbc63e83672a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Hope is a good thing！">文末给各位读者拜个年：<br><strong>祝大家鸡年大吉！身体健康！梦想成真！  </strong>                <a href="cometrue.top">cometrue.top</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为何要自建博客，而不是单纯选择新浪、云笔记上写文章|做记录，在昨天的文章&lt;a href=&quot;http://www.jianshu.com/p/718902b05e91&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;（一）在Windows平台下进行博客平台搭建
    
    </summary>
    
      <category term="践行" scheme="http://cometrue.top/categories/%E8%B7%B5%E8%A1%8C/"/>
    
      <category term="blog" scheme="http://cometrue.top/categories/%E8%B7%B5%E8%A1%8C/blog/"/>
    
    
      <category term="blog" scheme="http://cometrue.top/tags/blog/"/>
    
      <category term="github" scheme="http://cometrue.top/tags/github/"/>
    
      <category term="coding" scheme="http://cometrue.top/tags/coding/"/>
    
      <category term="hexo" scheme="http://cometrue.top/tags/hexo/"/>
    
      <category term="next" scheme="http://cometrue.top/tags/next/"/>
    
      <category term="博客" scheme="http://cometrue.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="域名" scheme="http://cometrue.top/tags/%E5%9F%9F%E5%90%8D/"/>
    
  </entry>
  
  <entry>
    <title>自建博客（一）在Windows平台下进行博客平台搭建</title>
    <link href="http://cometrue.top/2017/02/01/%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89%E5%9C%A8Windows%E5%B9%B3%E5%8F%B0%E4%B8%8B%E8%BF%9B%E8%A1%8C%E5%8D%9A%E5%AE%A2%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA/"/>
    <id>http://cometrue.top/2017/02/01/自建博客（一）在Windows平台下进行博客平台搭建/</id>
    <published>2017-02-01T14:36:27.000Z</published>
    <updated>2017-02-12T11:32:35.872Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、选择在-GitHub-上写博客"><a href="#一、选择在-GitHub-上写博客" class="headerlink" title="一、选择在 GitHub 上写博客"></a>一、选择在 GitHub 上写博客</h1><h2 id="1-GitHub是什么？"><a href="#1-GitHub是什么？" class="headerlink" title="1.GitHub是什么？"></a>1.GitHub是什么？</h2><ul>
<li>一家公司<br>位于旧金山，由<a href="https://github.com/defunkt" target="_blank" rel="external">Chris Wanstrath</a>, <a href="https://github.com/pjhyett" target="_blank" rel="external">PJ Hyett</a> 与<a href="https://github.com/mojombo" target="_blank" rel="external">Tom Preston-Werner</a>三位开发者在2008年4月创办。迄今拥有59名全职员工，主要提供基于git的版本托管服务。<blockquote>
<p>关于GitHub Page<br>使用github创建的博客是属于静态网站博客，也就是把写好的文章生成HTML网页，然后上传到github网站，显示的也就是HTML网页，所以加载速度会很快。</p>
</blockquote>
</li>
<li>一个网站<br><a href="https://my.oschina.net/nark/blog/116299" target="_blank" rel="external">GitHub</a>是一个基于git的版本托管服务网站，上面聚集着几乎全世界的程序大牛，还有着大量的牛逼开源项目。而项目一旦成长壮大，一个简单的名称和一段描述很可能就无法满足作者与读者的需要。此时，<a href="https://my.oschina.net/nark/blog/pages.github.com" target="_blank" rel="external">GitHub Pages</a> 就应运而生，它允许用户用更具描述性的自定义页面代替源码列表。同时，用户也可以利用其作为个人或组织主页，将 <strong>静态</strong> 网页托管其上。</li>
</ul>
<h2 id="2-我为何选择GitHub"><a href="#2-我为何选择GitHub" class="headerlink" title="2.我为何选择GitHub"></a>2.我为何选择GitHub</h2><ul>
<li>无需购置服务器，GitHub建立好链接之后，就可以方便的使用它提供的Pages服务，把blog托管在Github Pages不仅空间免费，而且稳定又安全，遭遇过空间商跑路的朋友是不是想起伤心往事</li>
<li>还能绑定顶级域名，亲，人家免费空间竟然还允许我们绑域名有木有~~</li>
<li>学着用 github，享受 github 的便利，比如允许本地服务器调试，脱离网络写文章毫无压力，因为可以使用git命令同步来管理文章，便于版本控制</li>
<li>用markedown编写文章，逐渐减少在排版上花费的时间，集中精力便于更好的输出<blockquote>
<p><a href="http://www.yangzhiping.com/tech/writing-space.html" target="_blank" rel="external">理想的写作环境：Git+Github+Markdown+Jekyll</a></p>
</blockquote>
</li>
<li>独立的才是自己的<br>2015年底看到<a href="http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html" target="_blank" rel="external">搭建一个免费的，无限流量的Blog—-github Pages和Jekyll入门</a>这篇文章，就感觉内心被触动了!</li>
</ul>
<h2 id="3-为什么写博客"><a href="#3-为什么写博客" class="headerlink" title="3.为什么写博客"></a>3.为什么写博客</h2><p>这里不重复理由，只是列出几篇有共鸣的文章作为大家的参考：<br><a href="http://beiyuu.com/why-blog" target="_blank" rel="external">我为什么写博客？</a><br><a href="https://zhuanlan.zhihu.com/p/19743861?columnSlug=cnfeat" target="_blank" rel="external">为什么你要写博客？</a><br><a href="http://www.ruanyifeng.com/blog/2006/12/why_i_keep_blogging.html" target="_blank" rel="external">为什么要写Blog？</a><br><a href="http://wenku.baidu.com/view/7a731d7f1711cc7931b7166e.html" target="_blank" rel="external">为什么你应该写博客</a><br><a href="http://blog.hiddenwangcc.com/archives/424" target="_blank" rel="external">为什么我要写博客？-02</a></p>
<h1 id="二、搭建Hexo博客"><a href="#二、搭建Hexo博客" class="headerlink" title="二、搭建Hexo博客"></a>二、搭建Hexo博客</h1><h2 id="1-关于HEXO"><a href="#1-关于HEXO" class="headerlink" title="1.关于HEXO"></a>1.关于HEXO</h2><ul>
<li>HEXO 是一款基于 Node.js 的静态博客框架。Hexo 使用 Markdown 解析文章，用户在本地安装Hexo并进行写作，通过一条命令，Hexo即可利用靓丽的主题自动生成静态网页。<br>参考：<a href="https://github.com/hexojs/hexo" target="_blank" rel="external">Hexo Github地址</a>     <a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external">Hexo帮助文档</a></li>
<li>选择HEXO完全是一个感觉，我从2016年初在博客环境搭建上折腾了很久，尝试了众多简易版本，最后要么觉得效果太简单，要么就是FORK后修改不成功，总之最后把时间精力都耗在了博客环境的形式之上，春节前发现HEXO的NEXT主题界面简洁，并集成了我期望的大部分功能，所以准备认真践行！</li>
</ul>
<h2 id="2-安装Git"><a href="#2-安装Git" class="headerlink" title="2.安装Git"></a>2.安装Git</h2><ul>
<li>到[官网]<a href="https://git-scm.com/download/win)下载" target="_blank" rel="external">https://git-scm.com/download/win)下载</a> Git，一路默认选项安装。本文使用的是Git-2.11.0.3-64-bit<br>，需要的用户可以<a href="http://okndkdckj.bkt.clouddn.com/Git-2.11.0.3-64-bit.exe" target="_blank" rel="external">点此下载</a> 。</li>
<li>安装完成后可以检查一下Git是不是安装正确了：同时按下Win和R，打开运行窗口：输入cmd，敲击回车，打开命令行界面。<br><img src="http://upload-images.jianshu.io/upload_images/4542536-d6a1dd735fb1e305.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>输入：<br><code>git --version</code><br>如果结果如下图所示，则说明安装正确，可以进行下一步了，如果不正确，则需要回头检查自己的安装过程。<br><img src="http://upload-images.jianshu.io/upload_images/4542536-8c8c189357a65612.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
</ul>
<blockquote>
<p>Mac：使用 <a href="http://mxcl.github.com/homebrew/" target="_blank" rel="external">Homebrew</a>, <a href="http://www.macports.org/" target="_blank" rel="external">MacPorts</a> ：brew install git ysyx<br>;或下载 <a href="http://sourceforge.net/projects/git-osx-installer/" target="_blank" rel="external">安装程序</a> 安装。<br>Linux (Ubuntu, Debian)：sudo apt-get install git-core</p>
</blockquote>
<p>Linux (Fedora, Red Hat, CentOS)：sudo yum install git-core</p>
<h2 id="3-安装Node-js"><a href="#3-安装Node-js" class="headerlink" title="3.安装Node.js"></a>3.安装Node.js</h2><ul>
<li>到<a href="http://nodejs.cn/download/" target="_blank" rel="external">官网</a>下载 Node.js，保持默认设置即可，一路Next。本文使用的是node-v6.2.0-x64，需要的用户可以<a href="http://okndkdckj.bkt.clouddn.com/node-v6.2.0-x64.msi" target="_blank" rel="external">点此下载</a> 。</li>
<li>同样检查一下是不是要求的组件都安装好了，用组合键“win+R”打开“运行”，输入“cmd”后回车，在打开的命令行界面中，输入<br><code>node -v 
npm -v</code><br>如果结果如下图所示，则说明安装正确，可以进行下一步了，如果不正确，则需要回头检查自己的安装过程。<br><img src="http://upload-images.jianshu.io/upload_images/4542536-96ae87455250daf9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><h2 id="4-安装Hexo"><a href="#4-安装Hexo" class="headerlink" title="4.安装Hexo"></a>4.安装Hexo</h2>Git 和 Node.js 都安装好后,首先创建一个用于存放博客文件的文件夹(比如取名 hexo），然后进入 hexo 文件夹，下面开始安装并使用 Hexo。右键选择Git Bash Here，弹出Git Bash窗口；执行命令：</li>
<li>安装Hexo<br><code>npm install hexo-cli -g</code><ul>
<li><strong><em>我在这出现了两个错误提示，暂时还无法解决：</em></strong><br><code>npm WARN optional Skipping failed optional dependency /hexo-cli/chokidar/fsevents:
npm WARN notsup Not compatible with your operating system or architecture: fsevents@1.0.12</code><br><img src="http://upload-images.jianshu.io/upload_images/4542536-6145c6bd23de90dd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
</ul>
</li>
<li>初始化hexo文件夹<br><code>hexo init</code><br><img src="http://upload-images.jianshu.io/upload_images/4542536-649bf148e7116548.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
<li>安装依赖和插件<br><code>npm install</code><br><img src="http://upload-images.jianshu.io/upload_images/4542536-579e9b560c0dcd39.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><img src="http://upload-images.jianshu.io/upload_images/4542536-ae06d742862aafac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><img src="http://upload-images.jianshu.io/upload_images/4542536-23c52c6d3248a4db.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><img src="http://upload-images.jianshu.io/upload_images/4542536-bcca0679f5d2c655.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><img src="http://upload-images.jianshu.io/upload_images/4542536-9264562135157be4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><ul>
<li><strong><em>这里还出现了两个错误提示，折腾了两天也还是暂时还无法解决：</em></strong><br><img src="http://upload-images.jianshu.io/upload_images/4542536-da30a7f42a0130b8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
</ul>
</li>
<li>启动服务器进行本地预览<br><code>hexo server</code><br>在本地浏览器中打开<a href="http://localhost:4000，成功的话即可看到博客页面，至此安装就完成了。" target="_blank" rel="external">http://localhost:4000，成功的话即可看到博客页面，至此安装就完成了。</a><br><img src="http://upload-images.jianshu.io/upload_images/4542536-47a30207e12538c9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
</ul>
<p>在后面<a href="http://www.jianshu.com/p/429f1191d188" target="_blank" rel="external">自建博客系列（四）HEXO博客的常识+更换NEXT主题</a>还有一些Hexo相关的实用内容。</p>
]]></content>
    
    <summary type="html">
    
      既然是自建博客之路，那就以我在本机（64位Win7系统）上搭建记录为主，拟使用GitHub+Hexo+NEXT主题搭建博客系统。
    
    </summary>
    
      <category term="践行" scheme="http://cometrue.top/categories/%E8%B7%B5%E8%A1%8C/"/>
    
      <category term="blog" scheme="http://cometrue.top/categories/%E8%B7%B5%E8%A1%8C/blog/"/>
    
    
      <category term="blog" scheme="http://cometrue.top/tags/blog/"/>
    
      <category term="github" scheme="http://cometrue.top/tags/github/"/>
    
      <category term="coding" scheme="http://cometrue.top/tags/coding/"/>
    
      <category term="hexo" scheme="http://cometrue.top/tags/hexo/"/>
    
      <category term="next" scheme="http://cometrue.top/tags/next/"/>
    
      <category term="博客" scheme="http://cometrue.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="自建" scheme="http://cometrue.top/tags/%E8%87%AA%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>自建博客系列之前言</title>
    <link href="http://cometrue.top/2017/01/30/%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%B3%BB%E5%88%97%E4%B9%8B%E5%89%8D%E8%A8%80/"/>
    <id>http://cometrue.top/2017/01/30/自建博客系列之前言/</id>
    <published>2017-01-30T11:44:58.000Z</published>
    <updated>2017-02-12T12:54:17.445Z</updated>
    
    <content type="html"><![CDATA[<p>本文是我注册<a href="http://www.jianshu.com/p/837a627ea3ed" target="_blank" rel="external">简书</a>后的第一篇文章，具有其自身的特殊性和重要性，但是我还是准备以碎碎念的形式来记录。<br><a id="more"></a><br>最早使用的博客是新浪博客，可内容大多是转帖，偶尔发一两篇，更多有知识中转站的意味。</p>
<p>自建博客的想法源自于2015年第四季度，最根本的目的是想通过增加输出的方式来倒逼自己输入的量，分享一些自己的经验和知识来帮助他人，也希望能吸引到一些志同道合的小伙伴们一路相伴支持前行~</p>
<p>真正动手购买域名，开始折腾之路是在2016年春节之后，主要是想通过在GITHUB上创建个人静态博客来实现，不停地FORK前辈并进行修改，一直未能满意。</p>
<p>今年春节前开始尝试通过HEXO来创建博客，看了不少“自建博客记录”，真正动手实践还是不断出错，比如<br><img src="http://upload-images.jianshu.io/upload_images/4542536-c9befec669d90498.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="出错.PNG"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4542536-dcd0eba6474b3924.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="错误2.PNG">。。。</p>
<p>作为一个技术小白 觉得真心折腾~</p>
<p>但是<img src="http://upload-images.jianshu.io/upload_images/4542536-1a0aece50ca5bd45.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="有梦想就当勇敢向前"></p>
<p>昨夜又在各大网站和知乎上看了不少前辈的建博经验，下决心今天重新安装，并同时开通简书，就“利用HEXO在GITHUB做一个NEXT主题的个人静态博客”专题记录下来，以便后来跟我有类似悲惨经历的小伙伴们~</p>
<p>本系列文章旨在帮助刚接触 <a href="https://github.com/" target="_blank" rel="external">Github</a> 新手，想利用 <a href="https://github.com/" target="_blank" rel="external">Github</a> 来创建自己的站点、个人博客等。同时也欢迎各位高手拍砖指点。</p>
<blockquote>
<p>最近访客</p>
<div class="ds-recent-visitors" data-num-items="28" data-avatar-size="42" id="ds-recent-visitors"></div>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文是我注册&lt;a href=&quot;http://www.jianshu.com/p/837a627ea3ed&quot;&gt;简书&lt;/a&gt;后的第一篇文章，具有其自身的特殊性和重要性，但是我还是准备以碎碎念的形式来记录。&lt;br&gt;
    
    </summary>
    
      <category term="践行" scheme="http://cometrue.top/categories/%E8%B7%B5%E8%A1%8C/"/>
    
      <category term="blog" scheme="http://cometrue.top/categories/%E8%B7%B5%E8%A1%8C/blog/"/>
    
    
      <category term="blog" scheme="http://cometrue.top/tags/blog/"/>
    
      <category term="github" scheme="http://cometrue.top/tags/github/"/>
    
      <category term="coding" scheme="http://cometrue.top/tags/coding/"/>
    
      <category term="hexo" scheme="http://cometrue.top/tags/hexo/"/>
    
      <category term="next" scheme="http://cometrue.top/tags/next/"/>
    
      <category term="博客" scheme="http://cometrue.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="践行" scheme="http://cometrue.top/tags/%E8%B7%B5%E8%A1%8C/"/>
    
  </entry>
  
</feed>
